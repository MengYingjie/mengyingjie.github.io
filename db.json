{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/53003270_p0.jpg","path":"img/53003270_p0.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/64655927_p3.jpg","path":"img/64655927_p3.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar-1.png","path":"img/avatar-1.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/comb.jpg","path":"img/comb.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-10.jpg","path":"img/default-10.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-11.jpg","path":"img/default-11.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-12.jpg","path":"img/default-12.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-13.jpg","path":"img/default-13.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-14.jpg","path":"img/default-14.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-15.jpg","path":"img/default-15.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-16.jpg","path":"img/default-16.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-2.png","path":"img/default-2.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-3.jpg","path":"img/default-3.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-4.jpg","path":"img/default-4.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-5.jpg","path":"img/default-5.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-6.jpg","path":"img/default-6.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-7.jpg","path":"img/default-7.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-8.jpg","path":"img/default-8.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default-9.jpg","path":"img/default-9.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default1.png","path":"img/default1.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/myj-2.png","path":"img/myj-2.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/myj.png","path":"img/myj.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/qq.jpg","path":"img/qq.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wx-1.jpg","path":"img/wx-1.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wx-2.jpg","path":"img/wx-2.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/yuque.jpg","path":"img/yuque.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/cpa.png","path":"img/cpa.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/lcg.png","path":"img/lcg.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/xfn.png","path":"img/xfn.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/umami-view.js","path":"js/umami-view.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/37.md","hash":"f9e5ef5dbfe1f5bc45b538152eaecad06a30332f","modified":1736026583883},{"_id":"source/_posts/39.md","hash":"ed4253ff9a45d1d95305861bfc89ff40830d06d7","modified":1736026890409},{"_id":"source/_drafts/hello-world.md","hash":"680a83521f1b9a20916bdf0565270ef02e8ca8ef","modified":1615035308000},{"_id":"source/_posts/🔑json到Object到具体对象.md","hash":"9bf7c8414ebae11c2caaef1d961977d06688b1d0","modified":1736022691814},{"_id":"source/_posts/为什么JAVA内部类要设计成静态和非静态.md","hash":"2995fdad96b2f1aef0a24a01ad989cdb10adf3ed","modified":1736026819055},{"_id":"source/_posts/美团笔试-空间回廊.md","hash":"7812792cc3e5fd1221c2459307316310cea49a17","modified":1736027015374},{"_id":"source/_posts/美团笔试-空间回廊/36-1.jpg","hash":"52f42c40e4e99810e348ecb49ee33192f810d3fd","modified":1615035308000},{"_id":"source/about/index.md","hash":"1f78b5bcedb5d7ec0e3f2aa61a58d17bef4b6364","modified":1632514278165},{"_id":"source/_posts/java中的Format时间和时间戳.md","hash":"634117a131b538149ceb02ea5d2f715e2a537b7f","modified":1736022671897},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616180641416},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1616180641420},{"_id":"themes/fluid/LICENSE","hash":"511e49f0bd8282a0d002c527474da8e1e5add393","modified":1736023280639},{"_id":"themes/fluid/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1616180641364},{"_id":"themes/fluid/.editorconfig","hash":"b595159772f3ee1ef5e6780ce307270e741cb309","modified":1616180641364},{"_id":"themes/fluid/.gitignore","hash":"9ede98b8d9dca802f82f651afb3b0366d69f05f1","modified":1736023280638},{"_id":"themes/fluid/README.md","hash":"34e3223851da1596b9ff051f2b29c6004edca8a1","modified":1736023280639},{"_id":"themes/fluid/_config.yml","hash":"87d356abba0f42b642ee3fa29abcb961bc6c9360","modified":1736025970352},{"_id":"themes/fluid/package.json","hash":"fd6756866314aaf4b15d734a83b85aa09aa0b5ed","modified":1736023280735},{"_id":"themes/fluid/languages/en.yml","hash":"415e3403182e1282386f28b9d61343f147519163","modified":1736023280652},{"_id":"themes/fluid/languages/de.yml","hash":"f814263ded504cb4c50a8b66157bdd71f553be1b","modified":1736023280651},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"443e8807e8ffce4358deae29c30d507a8f621f0e","modified":1736027658725},{"_id":"themes/fluid/languages/ja.yml","hash":"65a90f294f6c73245e8250e87d124630ad10b389","modified":1736023280654},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"e1043de394f6dcf5c0647adcfdefe60637f78426","modified":1736024507491},{"_id":"themes/fluid/layout/404.ejs","hash":"c49974dcbda02fe720498398e9778826335459c0","modified":1736023280689},{"_id":"themes/fluid/layout/about.ejs","hash":"2f3ea36713f0fa91d8d61d39fcf9e584372de818","modified":1736023280730},{"_id":"themes/fluid/layout/archive.ejs","hash":"c524ce76747042ec2f9ed8d5025f80e01b462b3b","modified":1736023280731},{"_id":"themes/fluid/layout/categories.ejs","hash":"838a68e210bddfca6d4ba070e1e2f1ca53cb7d06","modified":1736023280731},{"_id":"themes/fluid/layout/category.ejs","hash":"264f68cbf826787e683a30e1377c56c0895c7386","modified":1736023280732},{"_id":"themes/fluid/layout/index.ejs","hash":"dde1f6a27c8d09c38850a691089937f181b6c035","modified":1736023280732},{"_id":"themes/fluid/layout/links.ejs","hash":"fbed4b3d1e475b3de9d8ce05362abcc658a53408","modified":1736023280733},{"_id":"themes/fluid/layout/layout.ejs","hash":"d4ffeb7eff398dea154340794bd277f75ddeedef","modified":1736023280733},{"_id":"themes/fluid/layout/post.ejs","hash":"c8da695dc1b01b715909ae6f1052ccaebdf9db4c","modified":1736023280734},{"_id":"themes/fluid/layout/page.ejs","hash":"8ba210724c023d45a4564415762f3da299bd1d0e","modified":1736023280734},{"_id":"themes/fluid/layout/tag.ejs","hash":"e87fc58829ea214ac16e8e4f13cd5c389133697b","modified":1736023280734},{"_id":"themes/fluid/layout/tags.ejs","hash":"b7c1a6d8fc1097fc16d2300260297013cb692153","modified":1616180641392},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"7d7c1e5a1da6b4f7be6685beb4798ec76d5efd31","modified":1736023280636},{"_id":"themes/fluid/.eslintrc","hash":"3df89453e1f63051fafc90f16a8d83951050e316","modified":1616180641364},{"_id":"themes/fluid/gulpfile.js","hash":"1ad8861ce4f702c164f908efb6c1c6504154ed2d","modified":1616180641374},{"_id":"themes/fluid/README_en.md","hash":"85656f2a23cc5e31420f0118bf5541b6e9f058b6","modified":1736023280640},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"102213e5d6790d060c0e26b4a3a7ec744d753c52","modified":1616180641367},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"fea63a9a5c3befd8783705eed09adf1b596a6203","modified":1736023280636},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"bdbdb66da69ab7353b546f02150a6792f4787975","modified":1616180641369},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"5cc30e7b6e7b77c8b40b182ba02a5d93d37d2fc2","modified":1616180641366},{"_id":"themes/fluid/layout/_partial/archive-list.ejs","hash":"780117f8032df3b52169a387658a13cc025a0e13","modified":1632513369221},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"7db378613df2b7d13e8c428c006399a879a4a852","modified":1616180641366},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"904971bf3419bec46de416c27dceb39a73063f33","modified":1632513369221},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"a137110fe5c4c13eb189dc53fe270c0d390a97e0","modified":1632513369226},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"e2888ac4fc8f54b376b878944839030ac8d0676a","modified":1632513369227},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"9af7ff960a421933169162ea1a2cd7e7577b0ed7","modified":1632513369226},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"0d443f23c459787338917900f50fec1c8b3b3bdd","modified":1616180641382},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"2af4653ed3fefdbcb12c16a6d2fa166d14672845","modified":1632513369227},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"010b8b5ff2d1ae178cfba83a6c95d6345b053617","modified":1632513369229},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"00cdbf4c5e25a7f0c461ef460ae1af28c29e4712","modified":1632513369229},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"bea21f1b5de61badd6c068080315c201fc80bc36","modified":1616180641385},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"a70c26e415a27f07f38b9384e7eb48d1f2b30328","modified":1616180641385},{"_id":"themes/fluid/scripts/events/index.js","hash":"6c3b24207e4ea3ae4edeb715af40ef23711b92b9","modified":1736023280736},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"76e6bc368cf46d4103ea9514699e10ec0b9a4b56","modified":1616180641385},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"2340a576635b16fd2456b3494f5afe89cd7764db","modified":1616180641396},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"67637461e3f94f9e9675369eb7ff015355d9ec54","modified":1736023280740},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"33427308ca29f1d76336c83e704571c9de75df02","modified":1736023280741},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"3fb72d3c2224c32d861a6e8a85e78a8b67e6a244","modified":1736023280741},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"14a207a7d4e329382ab5d4e1da1ef85ff043daba","modified":1736023280743},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"49b2c6449d7be35739c6cfea3cab4e790580983a","modified":1616180641399},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"f713ddb6c8018ec7b96d3567057f1f932609beea","modified":1632513369234},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"f57be245e6e7228673e1dec3a3477e731492c5c1","modified":1736023280744},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"11ffc35b3ec21424181a7e84703b56f093da6a91","modified":1736023280744},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"1ff4ea054f2c735dfaccb0be90f1708a2a750bc8","modified":1736023280745},{"_id":"themes/fluid/scripts/tags/button.js","hash":"e1d0caed12e7cd9a35cf64272c41854b2901a58f","modified":1616180641402},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"cc176cc1d7e7cc28cedf8397ae748c691d140be2","modified":1616180641404},{"_id":"themes/fluid/scripts/tags/label.js","hash":"6c5916d86c63795c7e910bf614b0e7ece5073702","modified":1616180641405},{"_id":"themes/fluid/scripts/tags/note.js","hash":"e300ec4ee6c63464859ab000e987bf8dd7db4025","modified":1736023280746},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"dbfe59fde77d87b1d7d0c46480a2a729010988eb","modified":1616180641405},{"_id":"themes/fluid/scripts/utils/join-path.js","hash":"ec068c699155565aea4aa4ab55d8a10b2947a114","modified":1616180641406},{"_id":"themes/fluid/source/css/main.styl","hash":"9e9171325bb7148c11ceee283d00c137c8a1c5c5","modified":1736023280760},{"_id":"themes/fluid/scripts/utils/object.js","hash":"3e03b534e2e92a6e17567b006d7e3eaad4b37598","modified":1736023280746},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"07e24578c25fcaca94618fd86569887dadf7a276","modified":1736023280637},{"_id":"themes/fluid/.github/workflows/lint.yaml","hash":"17f7d9aba4420011b7665275c58f838557d2434c","modified":1616180641369},{"_id":"themes/fluid/source/img/avatar-1.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1616179298039},{"_id":"themes/fluid/source/img/avatar.png","hash":"9a340d9d5ca8b7258ecb5c46d42ea98f399ad229","modified":1616179298044},{"_id":"themes/fluid/source/css/gitalk.css","hash":"1fe60b2ab1d704f5a4f55e700dca5b8785fb390e","modified":1616180641423},{"_id":"themes/fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":499162500000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":499162500000},{"_id":"themes/fluid/source/img/default1.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1616179298423},{"_id":"themes/fluid/source/img/myj-2.png","hash":"19937b99d5b646f1c5521bcbd17ae4a323e63f1c","modified":1616179298436},{"_id":"themes/fluid/source/img/myj.png","hash":"15a561c0de18f10d367527f7e6d22a1b8c8ece76","modified":1616179298451},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":499162500000},{"_id":"themes/fluid/source/js/boot.js","hash":"33bb7c8255d2e3c93a1bea8c9221399b3a868a63","modified":1736023280761},{"_id":"themes/fluid/source/js/color-schema.js","hash":"e7addcc88eb73dec4a9a8641a4bb68966a38a65d","modified":1736023280762},{"_id":"themes/fluid/source/js/events.js","hash":"3efd602cdb694902d6e74c4eb1e5bd70120ac5b1","modified":1736023280763},{"_id":"themes/fluid/source/js/debouncer.js","hash":"8833902327af7beac17ab97227fcd835329abfa2","modified":1616180641426},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"67f6250f98b36a6599ea982d11cbb060c5ffb92a","modified":1616180641427},{"_id":"themes/fluid/source/js/leancloud.js","hash":"e9ad1b5659f0af867174687daa0ecf4375e40b75","modified":1736023280764},{"_id":"themes/fluid/source/js/plugins.js","hash":"753c2cf95f2659fef80277b895f4da10c8888c72","modified":1736023280765},{"_id":"themes/fluid/source/js/local-search.js","hash":"491021125d2579e841c83f36d3ab790d1eab9d1e","modified":1736023280764},{"_id":"themes/fluid/source/js/utils.js","hash":"9d0423db40a787f3b19968205b9ed92a848c9153","modified":1736023280767},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1616180641431},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"79ec17eec6e15076c685688e740230e92c66efa9","modified":1632513369223},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"0c410ef79785897c8de3da333b057a2936fd569b","modified":1632513369222},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"7f04e5c22821bb94da791973d9c6692b03bac81d","modified":1632513369223},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"bcceafab01fe695c59951d939f7cef502f3d7b48","modified":1632513369224},{"_id":"themes/fluid/layout/_partial/comments/twikoo.ejs","hash":"93d47bc528bf1a3d0fe950fc21a2da787e1b7dc9","modified":1632513369225},{"_id":"themes/fluid/layout/_partial/comments/remark42.ejs","hash":"45c879768b40ba56af62e18ad54bffbf73a6f3a1","modified":1632513369224},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"d1e86754c9560f7346200b2aa9a7f715a3fac82b","modified":1632513369225},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"bd2b8843094966dbc96c3768b4858c6e241a59a9","modified":1632513369226},{"_id":"themes/fluid/layout/_partial/comments/waline.ejs","hash":"d81bfb2f594d597f0e176abc09a76f3f58b98c2e","modified":1632513369226},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"d20f54bf2fd5cd274b4b9c5542eafbfec5120838","modified":1616180641383},{"_id":"themes/fluid/layout/_partial/plugins/local-search.ejs","hash":"7b8c3571c74121f4b8eb2f229330b56af4731dc5","modified":1616180641383},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"fd1f78287c868ccab78b6244b66e3f9b0968c4a8","modified":1616180641384},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"01cb1dd7bc10c7b2a544dfdf985dce1d0abf9ea0","modified":1632513369228},{"_id":"themes/fluid/layout/_partial/plugins/nprogress.ejs","hash":"47c1df255aa552ad71ef3e57deca46530a8f2802","modified":1616180641384},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"488be1a374f6f9336c5b921584593ef95f08a40c","modified":1632513369228},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"9b1934c61dc78622a07da554413f6ad31854576d","modified":1736023280737},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"31208a0db986ba864f756a8ec806b7d254440f9b","modified":1736023280736},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"da987411ae4a4e6896a9b8af1fce6209192af28e","modified":1736023280738},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"d103e4bf612b2445bb136712d57b81e784a313e2","modified":1736023280738},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"c9696633f77dd8055e900497469f9e64eca4d97f","modified":1632513369233},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"ec6bf395ccad3dd41f29dc0080aeabf413e30fd9","modified":1736023280739},{"_id":"themes/fluid/scripts/events/lib/version.js","hash":"8d4d18c027b081a2c4c86b861c1d331aba3cb1a2","modified":1616180641396},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"171697018fd384fce0834875ca94b91f16564cac","modified":1616180641407},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"046979dbd8cdabd21d89f9c1d8f1bb3f2fd06d6f","modified":1616180641408},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"92c062cf55457b6549497244d09ec34e9c0c95c2","modified":1616180641421},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"9ea66cf79f1e4356b6b402bc3dc5fb55c9862f1f","modified":1736023280759},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"8ba5fb6a8ced1de6f7893184bf12f4021fe22595","modified":1632513369236},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"e3846fb429f6732bd15fde40f7c28b3492d786c8","modified":1736023280747},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"cd255079553985722ee80fb1833f6507dde52194","modified":1736023280752},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"66d5b045c0e54001d3c98c5901d72590fe08acc4","modified":1736023280753},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"96c3bb95dea4b3d3ecd20b810a674bfcef04870c","modified":1736023280753},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"58a7f8f2baea2d58cf5f7edfc91314ee5d7156ca","modified":1616180641415},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"ef043d4ac0b7f2559c69cb72e112f80a4d238156","modified":1632513369240},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"0924e35eff2ec84e2d9e4772abccda452d9463ef","modified":1616180641416},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"bac20c8fb20276b08972df5ecc7a5850a72393f4","modified":1736023280755},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"d3ef491fd449d89a1b95801dee788a5d9bec4320","modified":1736023280756},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"c189a52dbc6eb554d1da3f2636920813b3b7e4fb","modified":1632513369241},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"10fcf4291b6efd5036214b7dde57ed2e3878fc1a","modified":1632513369241},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"29e9b72cfda2f2baf9cf2597fcd7f9e66303a9bd","modified":1616180641421},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"80301db38e448e40e88bb34d0128628b0809b243","modified":1736023280748},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"1068d71721baeed76bf0176f9b964d36b5764c9f","modified":1736023280748},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"c398892fba1494dd6fd417415076458ed321d34d","modified":1616180641411},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"e6f5921ff9009c1853e7db30c482bc1682433ed9","modified":1736023280749},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"41935973a66c14ab2bea0539d4b1f15c62534fa4","modified":1616180641412},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"88c3c2d99a097142a87eeec0c7c65a3789f25117","modified":1736023280750},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"04447d3b673be84a1af1dc57933a3c41dd7c0cfe","modified":1632513369238},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"e4dbbbb1a2508a72bc04680552d7ebbea0eed0fe","modified":1736023280752},{"_id":"themes/fluid/source/img/yuque.jpg","hash":"1328469f909a04457b68a6e291b0fd5b28b52aa1","modified":1616179298518},{"_id":"themes/fluid/source/img/wx-2.jpg","hash":"75127cc4ecb30764efe86e08f419fa31ce8000d9","modified":1616179298503},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"1f4e678d7219815ab62de1b92ec75e021247f90b","modified":1616180641414},{"_id":"themes/fluid/source/img/default-9.jpg","hash":"8a8b6db4b9a97e77cbf092745a22923cdb8c941f","modified":1616179298392},{"_id":"themes/fluid/source/lib/hint/hint.min.css","hash":"64fa8c328dc93432ec822de2818aef21a4f63b29","modified":1616180641430},{"_id":"themes/fluid/source/img/qq.jpg","hash":"ecc8b90ba224841ffaf5767f9065dacfc49ad665","modified":1616179298469},{"_id":"themes/fluid/source/img/wx-1.jpg","hash":"a8e43b8969bbd064e995ead1bfb084a236060401","modified":1616179298486},{"_id":"themes/fluid/source/img/53003270_p0.jpg","hash":"f3f8c5ef6ec656c1f4471ebac48e1cb0e003a092","modified":1616179298001},{"_id":"themes/fluid/source/img/64655927_p3.jpg","hash":"f9be78dc570a218c14380bdfa0b38977ae772150","modified":1616179298021},{"_id":"themes/fluid/source/img/default-11.jpg","hash":"3f0603db48fb62431fa33b4bd91483ca00e73d49","modified":1616179298121},{"_id":"themes/fluid/source/img/default-13.jpg","hash":"832f655d60990197591cced00138e743ad80f0c1","modified":1616179298164},{"_id":"themes/fluid/source/img/default-2.png","hash":"2d5167a43f5a42d248a05116fc3b6ef0c2c4602d","modified":1616179298256},{"_id":"themes/fluid/source/img/default-5.jpg","hash":"b7c8a9fab6eb49d76f681b8808209fb0e6a5bcdc","modified":1616179298318},{"_id":"themes/fluid/source/img/default-4.jpg","hash":"a7437dd45641be0b82eacd323aa947bba71fb6ce","modified":1616179298297},{"_id":"themes/fluid/source/img/default-7.jpg","hash":"a7437dd45641be0b82eacd323aa947bba71fb6ce","modified":1616179298356},{"_id":"themes/fluid/source/img/default-10.jpg","hash":"a8c4c3f2553b3c3708bf04f0b68f0849cc5bcf2f","modified":1616179298101},{"_id":"themes/fluid/source/img/default-14.jpg","hash":"e20169d7e6c597353b72e108f1a6bad5eff59961","modified":1616179298185},{"_id":"themes/fluid/source/img/default-15.jpg","hash":"5751c4017868dc543b68abcfb26892bad37c925a","modified":1616179298208},{"_id":"themes/fluid/source/img/default-8.jpg","hash":"942b214ecb6567b8b44aa6fb8c4fcd96a08cad80","modified":1616179298376},{"_id":"themes/fluid/source/img/default.png","hash":"a71dad3891dc997540bf9c925fdddaa53f6919d4","modified":1616179298415},{"_id":"themes/fluid/source/img/default-12.jpg","hash":"70a6b72fdd792e6ec3517aea82527d1b4e013d76","modified":1616179298141},{"_id":"themes/fluid/source/img/default-3.jpg","hash":"4463f6e591bb187024509a7990b46baa4c6e8f9a","modified":1616179298277},{"_id":"themes/fluid/source/img/default-6.jpg","hash":"a012c3ca50f2531086d747a4465eecbc81f925b6","modified":1616179298338},{"_id":"themes/fluid/source/img/default-16.jpg","hash":"386e5bb8c82accc4b7d016fa8db7533d2d73402d","modified":1616179298239},{"_id":"themes/fluid/source/img/comb.jpg","hash":"0648e26dce2ca02742246077d28456c8b7a9144a","modified":1616179298080},{"_id":"public/local-search.xml","hash":"6ae8839449ef6adad4495f6f43f0ac45eeb2e10e","modified":1736026908985},{"_id":"public/about/index.html","hash":"5445fda11de3898a717f8c2248d802c3c6aa28c0","modified":1736025868531},{"_id":"public/archives/index.html","hash":"8689c6ae290dca24ac41294ecf5e43c479a75fd2","modified":1736026733229},{"_id":"public/archives/2021/index.html","hash":"ac46faa4658933ad14dc6d81c2505411bbdb484d","modified":1736026460662},{"_id":"public/archives/2021/03/index.html","hash":"c73ec76a3232a38e21bbbdf3927c3de3e7099101","modified":1736026460662},{"_id":"public/categories/招聘/index.html","hash":"5c26c3cc3e3d93eadba72e1fea96e7760dd712b1","modified":1736025868531},{"_id":"public/categories/java/index.html","hash":"3b5eae7c4bb2470e8fc3a91e3fd9218c0863d15c","modified":1736025868531},{"_id":"public/categories/招聘/笔试/index.html","hash":"031a0f5442bfec74dfb56ae9d7a222b9200d5f0c","modified":1736025868531},{"_id":"public/categories/java/技巧/index.html","hash":"5371536c343add5fe8e0f49442dd33182084b7b9","modified":1736025868531},{"_id":"public/categories/java/spring/index.html","hash":"972d58a20fb54d078d248fa4dbab061722883015","modified":1736025868531},{"_id":"public/tags/c/index.html","hash":"592051d4e43807d7f4ab51e175fc62702b37328c","modified":1736025868531},{"_id":"public/tags/算法/index.html","hash":"9d35e3cc9176ab5c4beba44a947424985e493dc4","modified":1736025868531},{"_id":"public/tags/java/index.html","hash":"128f951b33645da457897f3c15c5d1f370350ef0","modified":1736025868531},{"_id":"public/tags/spring/index.html","hash":"aa811665bfed870ae86ffe7a326ae08d55406a40","modified":1736025868531},{"_id":"public/404.html","hash":"4ea6c93268cf3b48537c2aba74cd81b87381a3d3","modified":1736025868531},{"_id":"public/tags/index.html","hash":"20420388d934554db78d8a7d1248a3ee94a7a3a1","modified":1736025868531},{"_id":"public/categories/index.html","hash":"4757d485f7047e60dd2fd9deb8f145392fde6382","modified":1736025868531},{"_id":"public/links/index.html","hash":"518fcc7ec5e8076c72ab64d5835e7150634466dc","modified":1736025868531},{"_id":"public/archives/39/index.html","hash":"34d252b3bfb10ea4931a05fb6bde0edfed992813","modified":1736026908985},{"_id":"public/archives/37/index.html","hash":"7b3e4da811fb76de07d30b6aeca9ccee8641cfbb","modified":1736026639409},{"_id":"public/archives/java中的Format时间和时间戳/index.html","hash":"a19f6e3561f24caf66f9336b9fc703a401689b51","modified":1736025986787},{"_id":"public/archives/为什么JAVA内部类要设计成静态和非静态/index.html","hash":"895cc65e939f6cc870d9614946eac94e5d222617","modified":1736026908985},{"_id":"public/archives/美团笔试-空间回廊/index.html","hash":"5f356c48687569ec2ef7d74f6a9e6764d292e302","modified":1736025986787},{"_id":"public/archives/🔑json到Object到具体对象/index.html","hash":"b72c6d5499675ea915ac7a53ef2d57127c696e1c","modified":1736025986787},{"_id":"public/index.html","hash":"564034d4bd7f1414723aceadae0c62ecaf5483ce","modified":1736026908985},{"_id":"public/img/avatar-1.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1629218653490},{"_id":"public/img/avatar.png","hash":"9a340d9d5ca8b7258ecb5c46d42ea98f399ad229","modified":1629218653490},{"_id":"public/img/default1.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1629218653490},{"_id":"public/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1629218653490},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1629218653490},{"_id":"public/img/myj-2.png","hash":"19937b99d5b646f1c5521bcbd17ae4a323e63f1c","modified":1629218653490},{"_id":"public/img/myj.png","hash":"15a561c0de18f10d367527f7e6d22a1b8c8ece76","modified":1629218653490},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1629218653490},{"_id":"public/img/wx-2.jpg","hash":"75127cc4ecb30764efe86e08f419fa31ce8000d9","modified":1629218653490},{"_id":"public/img/yuque.jpg","hash":"1328469f909a04457b68a6e291b0fd5b28b52aa1","modified":1629218653490},{"_id":"public/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1629218653490},{"_id":"public/archives/美团笔试-空间回廊/36-1.jpg","hash":"52f42c40e4e99810e348ecb49ee33192f810d3fd","modified":1629218653490},{"_id":"public/img/default-9.jpg","hash":"8a8b6db4b9a97e77cbf092745a22923cdb8c941f","modified":1629218653490},{"_id":"public/img/qq.jpg","hash":"ecc8b90ba224841ffaf5767f9065dacfc49ad665","modified":1629218653490},{"_id":"public/img/wx-1.jpg","hash":"a8e43b8969bbd064e995ead1bfb084a236060401","modified":1629218653490},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1629218653490},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1736024677662},{"_id":"public/js/color-schema.js","hash":"1ef88c881b9f942deadde3d890387b94c617342a","modified":1736024677662},{"_id":"public/js/debouncer.js","hash":"045f324777bdfb99d4c17b1806169f029f897a65","modified":1629218653490},{"_id":"public/js/events.js","hash":"6869811f67e4c3de3edfa4b08464bb242b97a402","modified":1736024677662},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1629218653490},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1736024677662},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1736024677662},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1736024677662},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1736024677662},{"_id":"public/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1629218653490},{"_id":"public/css/main.css","hash":"436ddfcfb18bee4c482d0331d6a7ced2aaa2376d","modified":1736024677662},{"_id":"public/img/53003270_p0.jpg","hash":"f3f8c5ef6ec656c1f4471ebac48e1cb0e003a092","modified":1629218653490},{"_id":"public/img/64655927_p3.jpg","hash":"f9be78dc570a218c14380bdfa0b38977ae772150","modified":1629218653490},{"_id":"public/img/default-13.jpg","hash":"832f655d60990197591cced00138e743ad80f0c1","modified":1629218653490},{"_id":"public/img/default-2.png","hash":"2d5167a43f5a42d248a05116fc3b6ef0c2c4602d","modified":1629218653490},{"_id":"public/img/default-5.jpg","hash":"b7c8a9fab6eb49d76f681b8808209fb0e6a5bcdc","modified":1629218653490},{"_id":"public/img/default-7.jpg","hash":"a7437dd45641be0b82eacd323aa947bba71fb6ce","modified":1629218653490},{"_id":"public/img/default-11.jpg","hash":"3f0603db48fb62431fa33b4bd91483ca00e73d49","modified":1629218653490},{"_id":"public/img/default-4.jpg","hash":"a7437dd45641be0b82eacd323aa947bba71fb6ce","modified":1629218653490},{"_id":"public/img/default-14.jpg","hash":"e20169d7e6c597353b72e108f1a6bad5eff59961","modified":1629218653490},{"_id":"public/img/default-15.jpg","hash":"5751c4017868dc543b68abcfb26892bad37c925a","modified":1629218653490},{"_id":"public/img/default-3.jpg","hash":"4463f6e591bb187024509a7990b46baa4c6e8f9a","modified":1629218653490},{"_id":"public/img/default.png","hash":"a71dad3891dc997540bf9c925fdddaa53f6919d4","modified":1629218653490},{"_id":"public/img/default-10.jpg","hash":"a8c4c3f2553b3c3708bf04f0b68f0849cc5bcf2f","modified":1629218653490},{"_id":"public/img/default-12.jpg","hash":"70a6b72fdd792e6ec3517aea82527d1b4e013d76","modified":1629218653490},{"_id":"public/img/default-6.jpg","hash":"a012c3ca50f2531086d747a4465eecbc81f925b6","modified":1629218653490},{"_id":"public/img/default-8.jpg","hash":"942b214ecb6567b8b44aa6fb8c4fcd96a08cad80","modified":1629218653490},{"_id":"public/img/default-16.jpg","hash":"386e5bb8c82accc4b7d016fa8db7533d2d73402d","modified":1629218653490},{"_id":"public/img/comb.jpg","hash":"0648e26dce2ca02742246077d28456c8b7a9144a","modified":1629218653490},{"_id":"themes/fluid/languages/eo.yml","hash":"314b97a7e68093328675acfd308d839b1d772ac9","modified":1736023280653},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"37f90bd4e35ce49457dc2a348b9f66e0b242c014","modified":1632513369235},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"dbdb10b23fcd3928e86a4cb46fa3455e060b4aa0","modified":1632513369250},{"_id":"themes/fluid/layout/_partial/comments/cusdis.ejs","hash":"1e93ca89777e4beb0f0e5cb70e03aab48e958542","modified":1632513369222},{"_id":"themes/fluid/source/img/cpa.png","hash":"f59654295447d35391e7a6e4df0203fd640a7bc9","modified":1632515560919},{"_id":"public/img/cpa.png","hash":"f59654295447d35391e7a6e4df0203fd640a7bc9","modified":1632515758238},{"_id":"themes/fluid/source/img/lcg.png","hash":"f650f59418bb0ed6f73b7fb271db7f0febda73fe","modified":1632515894811},{"_id":"public/img/lcg.png","hash":"f650f59418bb0ed6f73b7fb271db7f0febda73fe","modified":1632516048576},{"_id":"themes/fluid/source/img/xfn.png","hash":"7363b6623afbd3072d2d182281c13c1bb4ceebda","modified":1632516525506},{"_id":"public/img/xfn.png","hash":"7363b6623afbd3072d2d182281c13c1bb4ceebda","modified":1632516607737},{"_id":"source/_posts/37-2.md","hash":"507ccbe5b33d216e0383b3f31fe27d4e8f669190","modified":1736027091588},{"_id":"source/_posts/test111.md","hash":"b4bed785c62592da32f44874172159fdf46cdc95","modified":1736025172548},{"_id":"public/archives/test111/index.html","hash":"b90d92c8cf480d6cccede588fe3ad03f65d38c91","modified":1736026733229},{"_id":"public/archives/2025/index.html","hash":"74f62158d2a51fc89956091983ebf95ac0d2c012","modified":1736026733229},{"_id":"public/archives/2025/01/index.html","hash":"83bd11f630d52782272e8abf8dd24d78f7521518","modified":1736026733229},{"_id":"public/archives/37-2/index.html","hash":"36dae1202978501714815644e36d514606e96efa","modified":1736025986787},{"_id":"themes/fluid/.idea/misc.xml","hash":"2037b4ce9d1419372b65e27640bbdf85cec49c00","modified":1736023627155},{"_id":"themes/fluid/.idea/fluid.iml","hash":"55c41399873b6627286a55a7e06e73c7b95f0f8f","modified":1736023626985},{"_id":"themes/fluid/.idea/modules.xml","hash":"846c02cc7db7f9356f67308ae5f76ed0edf5fdfb","modified":1736023627195},{"_id":"themes/fluid/.idea/vcs.xml","hash":"d222c1e95ba289f2814d142867f8b3c8b656bcc6","modified":1736023627107},{"_id":"themes/fluid/.idea/workspace.xml","hash":"b0dd4505dada4c261b8d5da7b0f07f6ad28c8db7","modified":1736028076500},{"_id":"themes/fluid/languages/es.yml","hash":"0ad94ddf1ca868a67b5b84aed257a30572962210","modified":1736023280654},{"_id":"themes/fluid/languages/ru.yml","hash":"998112b384b574e0e29c6ea16e4c1ebce1c15a4c","modified":1736023280655},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"05418d0bca261de386872be65027bf4498758788","modified":1736023280679},{"_id":"themes/fluid/.idea/inspectionProfiles/profiles_settings.xml","hash":"123097fe0d1ca811d1a355725d7066386ed490ec","modified":1736023627243},{"_id":"themes/fluid/.github/workflows/publish.yaml","hash":"dcdbe1698a6ee61f741c29ef560f859f66ffa32c","modified":1736023280637},{"_id":"themes/fluid/.github/workflows/cr.yaml","hash":"fc31c7c6692424af1e08cd5e273a5a5814f9c577","modified":1736023280637},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"78c34e32746041f23678669bbadfbede15e4c6d2","modified":1736023280690},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"508254a648d8597e62e4012c8beab44bfa82e904","modified":1736023280690},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"0c14869e15f7dc615c8353765569644238f38f2d","modified":1736023280691},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"1ce9094faec6204949cdaf604aaf9200787e4218","modified":1736023280691},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"6bb3335b5486d4bee2ed42f8bef57903066bc234","modified":1736023280714},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"901280e6fb3194c30542751d04f27e78b42d3c6f","modified":1736023280713},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"a0bcbbfc34efaef3b23c6b531e7f3201f2eab2dd","modified":1736023280715},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"3668304d08c48b68d532532921a12069a2736150","modified":1736023280715},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"b5cd435b27f090939b6051bef41a38a3376044ac","modified":1736023280717},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0d443f23c459787338917900f50fec1c8b3b3bdd","modified":1736023280717},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"89fc9f663a1091911b79ab9697c09446d16184f9","modified":1736023280730},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"57a0f61242d9ce2bd2c51b2f84193f6dc1377ef9","modified":1736023280730},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"3d30c722b9e24c33577d6fab822628841fadf992","modified":1736023280740},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bc9ba08d1d871394ee1c3a1cc2f21dc343f515a","modified":1736023280742},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"96af7e55fdbe0819bacc554ecbfe42375a088df6","modified":1736023280742},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"f9821f7789ea6f069977a8c642aa5ccb6d19077c","modified":1736023280743},{"_id":"themes/fluid/scripts/generators/index-generator.js","hash":"3550976efc94500284795f13485f5a1765fc120b","modified":1736023280740},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"9219d59c51930c7a82fcde918d6efbc5aa572ea2","modified":1736023280743},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"3b67d50050158423c8fa47f1de6aedcfe916637b","modified":1736023280743},{"_id":"themes/fluid/scripts/tags/fold.js","hash":"a93e2603021ad38714e870399767bea24e7cbe3e","modified":1736023280745},{"_id":"themes/fluid/scripts/utils/crypto.js","hash":"474b00a57f43dbe7bc2876d637ece4214d016c06","modified":1736023280746},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"c74d7aed425d20f2fa096f386a9521b67b9ab269","modified":1736023280759},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"a5d70005913ab03cea0a0dc601097628b4dbd5a8","modified":1736023280747},{"_id":"themes/fluid/source/css/highlight.styl","hash":"57ce8b8f95ab1f40612a9dce1793de5ab9b4bbfc","modified":1736023280759},{"_id":"themes/fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1736023280761},{"_id":"themes/fluid/source/js/umami-view.js","hash":"18a8e020c0753d980aa1c6945fd97770748b8178","modified":1736023280766},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"0c410ef79785897c8de3da333b057a2936fd569b","modified":1736023280691},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"1e93ca89777e4beb0f0e5cb70e03aab48e958542","modified":1736023280692},{"_id":"themes/fluid/layout/_partials/comments/discuss.ejs","hash":"d400e5721af28cefecaf50b46c82dcdde4cda4a8","modified":1736023280692},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"79ec17eec6e15076c685688e740230e92c66efa9","modified":1736023280692},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"66995ec9dab10ed35c2a775010c447113c6848d4","modified":1736023280693},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"7f04e5c22821bb94da791973d9c6692b03bac81d","modified":1736023280693},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"bcceafab01fe695c59951d939f7cef502f3d7b48","modified":1736023280711},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"45c879768b40ba56af62e18ad54bffbf73a6f3a1","modified":1736023280711},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"d7bcc183fc31af643e7835b13da10fe2ab8614ce","modified":1736023280712},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"938eb60413ae8af83ffeaba4d85df88387cdd5be","modified":1736023280712},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"ef04d4fc3f26588ae9d8712938d648304fc05455","modified":1736023280712},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"df6bae1a93827991049f7a33f6a69681c60eab0e","modified":1736023280713},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"77d0c9df31a22ed8a3e341637bde4165a11a7ce9","modified":1736023280714},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"047bece1db5cdf96cb78a44c6420ce3e92e6a9ca","modified":1736023280714},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"a84d8dcb44f5f6289ef09db4d02ab14de72c2c87","modified":1736023280716},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"e5219b14410066bf8ab491379aca797304b4a914","modified":1736023280716},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"f8fe8e58b83f627db82c0dbeb663389efc33c1c6","modified":1736023280718},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"8a4ea62c46f9a75c94096a27b2d3f5c10a2f82e5","modified":1736023280718},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"03c7c69fbb1754fdccfa18671aac23b8637b869e","modified":1736023280718},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"018cab52ff696a6c78ebc01e10237a90a0c33603","modified":1736023280719},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"3900e54ade140e0e49c571a1955f0b1f3a59b281","modified":1736023280719},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"502b99e19e496825df7032ca2b0b1a95ebb2b357","modified":1736023280719},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"d0f06fb482e3a8f9a53dfd94c4e4a65a43f1ff34","modified":1736023280720},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"110e45e2d3433178f00f482adc863110f90c46d6","modified":1736023280720},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"47c1df255aa552ad71ef3e57deca46530a8f2802","modified":1736023280726},{"_id":"themes/fluid/layout/_partials/plugins/moment.ejs","hash":"acc72c3284fe906a4505132c3d9a4720d80e6fcb","modified":1736023280721},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"42850952e8f5858497fe774c2aff87b6563ab01e","modified":1736023280726},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"551ffae43844925beb099c85a9e6d8d9fcbf8086","modified":1736023280727},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"f0cb813cd03642c9b68cff8b6669f73a61dd10f8","modified":1736023280728},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"73827074db4e0fc3d52c51a76285df87aa5e5a7f","modified":1736023280728},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"26905d5862b1531ebcc175af15178dabeecc81c8","modified":1736023280727},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"db4ecdcc762bb1b1bae5060f0baa6115174779ff","modified":1736023280728},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"2507cdad08f61cf8c1d9b0ca7f4f1dc8c4e5841b","modified":1736023280729},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"1b1eb4c8e163a5d909e86da76ef778948e0e0b77","modified":1736023280729},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"92123b7280695b4ac6650f5e1d7fa0d772c71f5b","modified":1736023280739},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"f35415bd86b5c26fbc71728048d9e1481263554f","modified":1736023280754},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"4263f7b930e6b57e13295d17fd3745a9e5c52494","modified":1736023280755},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"d3aeb7bf22d52d7dde59b292090ef8b46943718a","modified":1736023280755},{"_id":"themes/fluid/source/css/_pages/_base/print.styl","hash":"571bd018e914bd0f7c5f89df874b5937937e5fa6","modified":1736023280754},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"1fc96d09d52d9502e84e4e2a8d482ea45e8b81ea","modified":1736023280757},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"d73cccb65eaa804910884df17442e34736b3f4fb","modified":1736023280757},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"2d12f23b46d0ce07ae810bc4f5635c490a098fa4","modified":1736023280757},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"6a35a450bd0a12f68fd92aac3f88b23475a98d46","modified":1736023280758},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"31c64c3fae4a0fc4747d8afeb72f7a9667c5326c","modified":1736023280758},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"26d65475b1c52a61115044db8883df6739c3a473","modified":1736023280747},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"417a7388b39c0203178b0032e151febd66a0e9f3","modified":1736023280749},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"3ac1eb36e124adef607775aa505386d5680960e2","modified":1736023280749},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"48799d3148ef6493be0e05897c635124e9b05d03","modified":1736023280750},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"f4ae7cbf2f10f459de7864f8e642553b587df889","modified":1736023280751},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"5defef321e3e933fe84f3f2ca481c88f55381fb0","modified":1736023280752},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"8fad325e411bc83c8ebdc4115015477eed5f60da","modified":1736023280751},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"0ca6171ce262339e0e36cfea0978b554d87ae7fc","modified":1736023280750},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1736024677662},{"_id":"public/css/highlight-dark.css","hash":"fdaf3f62244b6518f7dc5b7e22c7521213f2081e","modified":1736024677662},{"_id":"public/js/umami-view.js","hash":"188adc198fd64964b1370d5c96a3d073eb57d4ff","modified":1736024677662},{"_id":"public/css/highlight.css","hash":"6e2f8edcc875b4d8e0cf5f2610e6e908bf9b51b1","modified":1736024677662},{"_id":"source/_posts/images/785aec667de7b8ddc47745f30372f7b0_MD5.png.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1736026298661},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）.md","hash":"4c2fb8392448146cdb56e3dee03d55a3c0a91264","modified":1736026626799},{"_id":"source/_posts/.obsidian/app.json","hash":"bf21a9e8fbc5a3846fb05b4fa0859e0917b2202f","modified":1736026213841},{"_id":"source/_posts/.obsidian/appearance.json","hash":"bf21a9e8fbc5a3846fb05b4fa0859e0917b2202f","modified":1736026213843},{"_id":"source/_posts/.obsidian/core-plugins-migration.json","hash":"688b44c61ce85d9ac421b1a310a72c1348bc9b51","modified":1736026213380},{"_id":"source/_posts/.obsidian/core-plugins.json","hash":"eb138d03157a06efdb791f441be97c256aca472c","modified":1736026213374},{"_id":"source/_posts/.obsidian/workspace.json","hash":"fd417b05b09ba3db22fd7a4a8b9c174831f8e50a","modified":1736027439856},{"_id":"source/_posts/images/18a97818680096f1f60c954cb6f386dd_MD5.png","hash":"0277ec208ce585d6b8fb0cbfae64a43c338f9a85","modified":1698234101000},{"_id":"source/_posts/images/2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png","hash":"20b1740b1e036b5dc1fa4f629faf4d3ae9650a75","modified":1698234101000},{"_id":"source/_posts/images/1a70270c8c5728677ee3763b55c99bc1_MD5.png","hash":"c63fa7bdf7ca0c2d7235a9b150efcc2266c53c56","modified":1698234101000},{"_id":"source/_posts/images/910ba56bc046516ca2eca596131ff90e_MD5.png","hash":"5d4b176ddcbaca38cbeb8c175194cff90ae2fcd3","modified":1698234101000},{"_id":"source/_posts/images/b7deb45977cb823eec3fc164f62a5866_MD5.png","hash":"444626a994ecfaa37840f91bc53d1acc4b343fb8","modified":1698234101000},{"_id":"source/_posts/images/1182f70ca6531857175a276bf1b4f2bb_MD5.png","hash":"a61919427e817c957de7cecee9b7861acffff423","modified":1698234101000},{"_id":"source/_posts/images/785aec667de7b8ddc47745f30372f7b0_MD5.png","hash":"86b7bbb3f6b6b5eef1449096b30483029e090723","modified":1698234101000},{"_id":"source/_posts/images/d8c30fb32cfaf40eed9a2591525beedc_MD5.png","hash":"dc667d16183dced48bc1d0f1dda31916bdaa24ca","modified":1698234101000},{"_id":"public/archives/🎭面具的使用技巧（生产力工具）/index.html","hash":"c554c318ccd073781b7116039d5f0980f30e84a9","modified":1736026639409},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/18a97818680096f1f60c954cb6f386dd_MD5.png","hash":"0277ec208ce585d6b8fb0cbfae64a43c338f9a85","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/1a70270c8c5728677ee3763b55c99bc1_MD5.png","hash":"c63fa7bdf7ca0c2d7235a9b150efcc2266c53c56","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png","hash":"20b1740b1e036b5dc1fa4f629faf4d3ae9650a75","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/910ba56bc046516ca2eca596131ff90e_MD5.png","hash":"5d4b176ddcbaca38cbeb8c175194cff90ae2fcd3","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/b7deb45977cb823eec3fc164f62a5866_MD5.png","hash":"444626a994ecfaa37840f91bc53d1acc4b343fb8","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/1182f70ca6531857175a276bf1b4f2bb_MD5.png","hash":"a61919427e817c957de7cecee9b7861acffff423","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/785aec667de7b8ddc47745f30372f7b0_MD5.png","hash":"86b7bbb3f6b6b5eef1449096b30483029e090723","modified":1698234101000},{"_id":"source/_posts/🎭面具的使用技巧（生产力工具）/d8c30fb32cfaf40eed9a2591525beedc_MD5.png","hash":"dc667d16183dced48bc1d0f1dda31916bdaa24ca","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧（生产力工具）.md","hash":"fc341df6db559d82076c7b941155f900448eccfa","modified":1736027039660},{"_id":"public/archives/面具的使用技巧（生产力工具）/index.html","hash":"19f62202bc0ecd09b3773eccaf619ee079b5caa7","modified":1736026964283},{"_id":"source/_posts/面具的使用技巧/1a70270c8c5728677ee3763b55c99bc1_MD5.png","hash":"c63fa7bdf7ca0c2d7235a9b150efcc2266c53c56","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/18a97818680096f1f60c954cb6f386dd_MD5.png","hash":"0277ec208ce585d6b8fb0cbfae64a43c338f9a85","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png","hash":"20b1740b1e036b5dc1fa4f629faf4d3ae9650a75","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/910ba56bc046516ca2eca596131ff90e_MD5.png","hash":"5d4b176ddcbaca38cbeb8c175194cff90ae2fcd3","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/b7deb45977cb823eec3fc164f62a5866_MD5.png","hash":"444626a994ecfaa37840f91bc53d1acc4b343fb8","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/1182f70ca6531857175a276bf1b4f2bb_MD5.png","hash":"a61919427e817c957de7cecee9b7861acffff423","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/785aec667de7b8ddc47745f30372f7b0_MD5.png","hash":"86b7bbb3f6b6b5eef1449096b30483029e090723","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧/d8c30fb32cfaf40eed9a2591525beedc_MD5.png","hash":"dc667d16183dced48bc1d0f1dda31916bdaa24ca","modified":1698234101000},{"_id":"source/_posts/面具的使用技巧.md","hash":"72261a545f9493baebbdda093e4f895b102da380","modified":1736027453001}],"Category":[{"name":"招聘","_id":"cksgapz7f000560bwhvx9hyt0"},{"name":"java","_id":"cksgapz7r000e60bw8yvr9cs5"},{"name":"笔试","parent":"cksgapz7f000560bwhvx9hyt0","_id":"cksgapz7x000k60bw2ugc7oyc"},{"name":"技巧","parent":"cksgapz7r000e60bw8yvr9cs5","_id":"cksgapz82001060bw6wvpeb34"},{"name":"spring","parent":"cksgapz7r000e60bw8yvr9cs5","_id":"cksgapz84001760bwhyay54zq"},{"name":"AIGC","_id":"cm5ipvt01000c4g8t4w3ughf9"},{"name":"笔试","parent":"cm5ipvt01000c4g8t4w3ughf9","_id":"cm5ipvt02000d4g8tbo3v7f5c"}],"Data":[],"Page":[{"title":"about","date":"2021-03-01T13:22:25.000Z","layout":"about","comment":true,"_content":"\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-03-01 21:22:25\nlayout: about\ncomment: true\n---\n\n","updated":"2021-09-24T20:11:18.165Z","path":"about/index.html","_id":"cksgapz4a000060bwdq0289nv","comments":1,"content":"","site":{"data":{}},"wordcount":0,"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2021-03-01T01:39:50.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_drafts/hello-world.md","raw":"---\ntitle: Hello World\ntags: test\ndate: 2021-03-1 09:39:50\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":0,"updated":"2021-03-06T12:55:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksgapz75000160bwesj3gkfz","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></div></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></div></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></div></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"🚄携程校招——携程海洋馆的海豚小宝宝（C++）","date":"2021-03-19T17:42:40.000Z","_content":"\n> [ ⭐ 文章链接: myj.im/archives/37/⭐ ](https://myj.im/archives/37/) \n\n### 题目描述：\n携程海洋馆中有 n 只萌萌的小海豚，初始均为 0 岁，每只小海豚的寿命是 m 岁，\n\n且这些小海豚会在 birthYear[i] 这些年份生产出一位宝宝海豚（1 <= birthYear[i] <= m），每位宝宝海豚刚出生为 0 岁。\n\n问 x 年时，携程海洋馆有多少只小海豚？\n#### 输入\nn（初始海豚数）\n\nm（海豚寿命）\n\n海豚生宝宝的年份数量(假设为p)\n\n海豚生宝宝的年份1\n\n...\n\n海豚生宝宝的年份p\n\nx（几年后）\n#### 输出\nx年后，共有多少只小海豚\n#### 样例输入\n5\n5\n2\n2\n4\n5\n\n#### 样例输出\n20\n### 代码\n```cpp\n#include <iostream>\nusing namespace std;\n\n\nint main()\n{\n    //n 海豚,海豚寿命m,海豚生宝宝的年份数量p,x年后\n    int n, m, p, x;\n    //n1表示现存的海豚，n2表示一共存在过的海豚包含死去的，由此定义数组大小\n    int n1,n2;\n    //arr2表示海豚来到世上第多少年，死去的海豚为-1，定义足够大来存放\n    int arr2[99999];\n    cin >> n >> m >> p;\n    n1 = n2 = n ;\n    //arr1来存放生孩子的年份\n    int arr1[p];\n    //输入生孩子的年份\n    for(int i = 0; i < p; i++){\n        cin >> arr1[i];\n    }\n    cin >> x;\n    //初始化现在海豚的来到世上的第几年，初始化为1，表示是第一年\n    for(int i = 0; i < n; i++){\n        arr2[i] = 1;\n    }\n    //进入年份循环，循环x次，表示过去x年\n    for(int i = 1; i <= x; i++){\n        //每一年循环一边海豚的年份\n        for(int j = 0; j < n2; j++){\n            //如果海豚年份为-1，表示已经去世\n            if(arr2[j] == -1)continue;\n            //判断词海豚是否在生孩子的年份\n            for(int k = 0; k < p; k++){\n                //如果是\n                if(arr2[j] == arr1[k]){\n                    n1++;\n                    n2++;\n                    arr2[n2-1] = 0;\n                }\n            }\n            //寿命到了，置为-1，因为初始年龄为0，所以年龄等于存在的年份-1.\n            if(arr2[j] - 1 == m){\n                n1--;\n                arr2[j] = -1;\n            }\n            arr2[j]++;\n        }\n    }\n    cout << n1 << endl;\n    return 0 ;\n}\n\n```\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815\n","source":"_posts/37.md","raw":"---\ntitle: 🚄携程校招——携程海洋馆的海豚小宝宝（C++）\ntags: \n- c++\n- 算法\ndate: 2021-03-20 01:42:40\ncategories:\n- 招聘\n- 笔试\n---\n\n> [ ⭐ 文章链接: myj.im/archives/37/⭐ ](https://myj.im/archives/37/) \n\n### 题目描述：\n携程海洋馆中有 n 只萌萌的小海豚，初始均为 0 岁，每只小海豚的寿命是 m 岁，\n\n且这些小海豚会在 birthYear[i] 这些年份生产出一位宝宝海豚（1 <= birthYear[i] <= m），每位宝宝海豚刚出生为 0 岁。\n\n问 x 年时，携程海洋馆有多少只小海豚？\n#### 输入\nn（初始海豚数）\n\nm（海豚寿命）\n\n海豚生宝宝的年份数量(假设为p)\n\n海豚生宝宝的年份1\n\n...\n\n海豚生宝宝的年份p\n\nx（几年后）\n#### 输出\nx年后，共有多少只小海豚\n#### 样例输入\n5\n5\n2\n2\n4\n5\n\n#### 样例输出\n20\n### 代码\n```cpp\n#include <iostream>\nusing namespace std;\n\n\nint main()\n{\n    //n 海豚,海豚寿命m,海豚生宝宝的年份数量p,x年后\n    int n, m, p, x;\n    //n1表示现存的海豚，n2表示一共存在过的海豚包含死去的，由此定义数组大小\n    int n1,n2;\n    //arr2表示海豚来到世上第多少年，死去的海豚为-1，定义足够大来存放\n    int arr2[99999];\n    cin >> n >> m >> p;\n    n1 = n2 = n ;\n    //arr1来存放生孩子的年份\n    int arr1[p];\n    //输入生孩子的年份\n    for(int i = 0; i < p; i++){\n        cin >> arr1[i];\n    }\n    cin >> x;\n    //初始化现在海豚的来到世上的第几年，初始化为1，表示是第一年\n    for(int i = 0; i < n; i++){\n        arr2[i] = 1;\n    }\n    //进入年份循环，循环x次，表示过去x年\n    for(int i = 1; i <= x; i++){\n        //每一年循环一边海豚的年份\n        for(int j = 0; j < n2; j++){\n            //如果海豚年份为-1，表示已经去世\n            if(arr2[j] == -1)continue;\n            //判断词海豚是否在生孩子的年份\n            for(int k = 0; k < p; k++){\n                //如果是\n                if(arr2[j] == arr1[k]){\n                    n1++;\n                    n2++;\n                    arr2[n2-1] = 0;\n                }\n            }\n            //寿命到了，置为-1，因为初始年龄为0，所以年龄等于存在的年份-1.\n            if(arr2[j] - 1 == m){\n                n1--;\n                arr2[j] = -1;\n            }\n            arr2[j]++;\n        }\n    }\n    cout << n1 << endl;\n    return 0 ;\n}\n\n```\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815\n","slug":"37","published":1,"updated":"2025-01-04T21:36:23.883Z","_id":"cksgapz79000260bw95fga1jt","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><a href=\"https://myj.im/archives/37/\"> ⭐ 文章链接: myj.im/archives/37/⭐ </a> </p>\n</blockquote>\n<h3 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><p>携程海洋馆中有 n 只萌萌的小海豚，初始均为 0 岁，每只小海豚的寿命是 m 岁，</p>\n<p>且这些小海豚会在 birthYear[i] 这些年份生产出一位宝宝海豚（1 &lt;= birthYear[i] &lt;= m），每位宝宝海豚刚出生为 0 岁。</p>\n<p>问 x 年时，携程海洋馆有多少只小海豚？</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>n（初始海豚数）</p>\n<p>m（海豚寿命）</p>\n<p>海豚生宝宝的年份数量(假设为p)</p>\n<p>海豚生宝宝的年份1</p>\n<p>…</p>\n<p>海豚生宝宝的年份p</p>\n<p>x（几年后）</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>x年后，共有多少只小海豚</p>\n<h4 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h4><p>5<br>5<br>2<br>2<br>4<br>5</p>\n<h4 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h4><p>20</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-comment\">//n 海豚,海豚寿命m,海豚生宝宝的年份数量p,x年后</span><br>    <span class=\"hljs-keyword\">int</span> n, m, p, x;<br>    <span class=\"hljs-comment\">//n1表示现存的海豚，n2表示一共存在过的海豚包含死去的，由此定义数组大小</span><br>    <span class=\"hljs-keyword\">int</span> n1,n2;<br>    <span class=\"hljs-comment\">//arr2表示海豚来到世上第多少年，死去的海豚为-1，定义足够大来存放</span><br>    <span class=\"hljs-keyword\">int</span> arr2[<span class=\"hljs-number\">99999</span>];<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; p;<br>    n1 = n2 = n ;<br>    <span class=\"hljs-comment\">//arr1来存放生孩子的年份</span><br>    <span class=\"hljs-keyword\">int</span> arr1[p];<br>    <span class=\"hljs-comment\">//输入生孩子的年份</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; p; i++)&#123;<br>        <span class=\"hljs-built_in\">cin</span> &gt;&gt; arr1[i];<br>    &#125;<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; x;<br>    <span class=\"hljs-comment\">//初始化现在海豚的来到世上的第几年，初始化为1，表示是第一年</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)&#123;<br>        arr2[i] = <span class=\"hljs-number\">1</span>;<br>    &#125;<br>    <span class=\"hljs-comment\">//进入年份循环，循环x次，表示过去x年</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= x; i++)&#123;<br>        <span class=\"hljs-comment\">//每一年循环一边海豚的年份</span><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n2; j++)&#123;<br>            <span class=\"hljs-comment\">//如果海豚年份为-1，表示已经去世</span><br>            <span class=\"hljs-keyword\">if</span>(arr2[j] == <span class=\"hljs-number\">-1</span>)<span class=\"hljs-keyword\">continue</span>;<br>            <span class=\"hljs-comment\">//判断词海豚是否在生孩子的年份</span><br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> k = <span class=\"hljs-number\">0</span>; k &lt; p; k++)&#123;<br>                <span class=\"hljs-comment\">//如果是</span><br>                <span class=\"hljs-keyword\">if</span>(arr2[j] == arr1[k])&#123;<br>                    n1++;<br>                    n2++;<br>                    arr2[n2<span class=\"hljs-number\">-1</span>] = <span class=\"hljs-number\">0</span>;<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-comment\">//寿命到了，置为-1，因为初始年龄为0，所以年龄等于存在的年份-1.</span><br>            <span class=\"hljs-keyword\">if</span>(arr2[j] - <span class=\"hljs-number\">1</span> == m)&#123;<br>                n1--;<br>                arr2[j] = <span class=\"hljs-number\">-1</span>;<br>            &#125;<br>            arr2[j]++;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">cout</span> &lt;&lt; n1 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span> ;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://myj.im/archives/37/\"> ⭐ 文章链接: myj.im/archives/37/⭐ </a> </p>\n</blockquote>\n<h3 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><p>携程海洋馆中有 n 只萌萌的小海豚，初始均为 0 岁，每只小海豚的寿命是 m 岁，</p>\n<p>且这些小海豚会在 birthYear[i] 这些年份生产出一位宝宝海豚（1 &lt;= birthYear[i] &lt;= m），每位宝宝海豚刚出生为 0 岁。</p>\n<p>问 x 年时，携程海洋馆有多少只小海豚？</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>n（初始海豚数）</p>\n<p>m（海豚寿命）</p>\n<p>海豚生宝宝的年份数量(假设为p)</p>\n<p>海豚生宝宝的年份1</p>\n<p>…</p>\n<p>海豚生宝宝的年份p</p>\n<p>x（几年后）</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>x年后，共有多少只小海豚</p>\n<h4 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h4><p>5<br>5<br>2<br>2<br>4<br>5</p>\n<h4 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h4><p>20</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;<br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span><br><span class=\"hljs-function\"></span>&#123;<br>    <span class=\"hljs-comment\">//n 海豚,海豚寿命m,海豚生宝宝的年份数量p,x年后</span><br>    <span class=\"hljs-keyword\">int</span> n, m, p, x;<br>    <span class=\"hljs-comment\">//n1表示现存的海豚，n2表示一共存在过的海豚包含死去的，由此定义数组大小</span><br>    <span class=\"hljs-keyword\">int</span> n1,n2;<br>    <span class=\"hljs-comment\">//arr2表示海豚来到世上第多少年，死去的海豚为-1，定义足够大来存放</span><br>    <span class=\"hljs-keyword\">int</span> arr2[<span class=\"hljs-number\">99999</span>];<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; p;<br>    n1 = n2 = n ;<br>    <span class=\"hljs-comment\">//arr1来存放生孩子的年份</span><br>    <span class=\"hljs-keyword\">int</span> arr1[p];<br>    <span class=\"hljs-comment\">//输入生孩子的年份</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; p; i++)&#123;<br>        <span class=\"hljs-built_in\">cin</span> &gt;&gt; arr1[i];<br>    &#125;<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; x;<br>    <span class=\"hljs-comment\">//初始化现在海豚的来到世上的第几年，初始化为1，表示是第一年</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)&#123;<br>        arr2[i] = <span class=\"hljs-number\">1</span>;<br>    &#125;<br>    <span class=\"hljs-comment\">//进入年份循环，循环x次，表示过去x年</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= x; i++)&#123;<br>        <span class=\"hljs-comment\">//每一年循环一边海豚的年份</span><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; n2; j++)&#123;<br>            <span class=\"hljs-comment\">//如果海豚年份为-1，表示已经去世</span><br>            <span class=\"hljs-keyword\">if</span>(arr2[j] == <span class=\"hljs-number\">-1</span>)<span class=\"hljs-keyword\">continue</span>;<br>            <span class=\"hljs-comment\">//判断词海豚是否在生孩子的年份</span><br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> k = <span class=\"hljs-number\">0</span>; k &lt; p; k++)&#123;<br>                <span class=\"hljs-comment\">//如果是</span><br>                <span class=\"hljs-keyword\">if</span>(arr2[j] == arr1[k])&#123;<br>                    n1++;<br>                    n2++;<br>                    arr2[n2<span class=\"hljs-number\">-1</span>] = <span class=\"hljs-number\">0</span>;<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-comment\">//寿命到了，置为-1，因为初始年龄为0，所以年龄等于存在的年份-1.</span><br>            <span class=\"hljs-keyword\">if</span>(arr2[j] - <span class=\"hljs-number\">1</span> == m)&#123;<br>                n1--;<br>                arr2[j] = <span class=\"hljs-number\">-1</span>;<br>            &#125;<br>            arr2[j]++;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">cout</span> &lt;&lt; n1 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span> ;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n"},{"title":"🚥360校招——最后赢家（C++）","date":"2021-03-20T16:42:41.000Z","_content":"\n> [ ⭐ 文章链接: myj.im/archives/39/ ⭐ ](https://myj.im/archives/39/) \n\n>时间限制：C/C++语言 1000MS；其他语言 3000MS\n>内存限制：C/C++语言 65536KB；其他语言 589824KB\n\n### 题目描述：\n最强的不一定是最后的赢家。\n\n某赛事有n名选手参加，但是不同于其他的比赛，本比赛采取的是擂台赛的形式，n名选手排成一排，每次队伍的第一位和第二位选手进行比赛，输的一方会排到队尾。\n\n当某位选手取得m连胜时，他将成为最后的赢家，且游戏结束，请问截止到游戏结束，共会进行多少次比赛。\n\n两位选手的比赛结果由他们的战斗力决定，n位选手的战斗力是一个1~n的排列，也就是说他们的战斗力两两不同，不会有平局的情况。\n\n#### 输入\n输入第一行包含两个正整数n，m，分别代表参赛选手数量和取得连胜的要求。(1<=n<=100000，1<=m<=10^9)\n\n输入第二行包含n个正整数，中间用空格隔开，第i个数表示队伍的第i位选手的战斗力，整体是一个1~n的排列。\n\n#### 输出\n输出仅包含一个正整数，表示截止到游戏终止，共进行多少场比赛。\n\n\n#### 样例输入\n4 2\n1 3 2 4\n#### 样例输出\n2\n\n#### 提示\n样例解释\n显然第一局应该是战斗力为3的选手获胜，第二局同样是战斗力为3的选手获胜，2连胜终止游戏，所以答案是2。此时若修改m为3，则结果是5。\n\n\n### 代码\n解题思路写在代码的注释里\n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\nint main(){\n    //n，m，分别代表参赛选手数量和取得连胜的要求\n    //cnt记录作为基准选手的胜场数\n    int n, m, h, y, cnt;\n    //cnt2表示共进行了多少场比赛\n    int cnt2 = 0;\n    //定义队列来存储每位选手的战斗力\n    queue <int> q;\n    cin >> n >> m;\n    for(int i = 0; i < n; i++){\n        //将战斗力存储在队列中\n        cin >> h;\n        q.push(h);\n    }\n    //取出第一个队列当作基准\n    h = q.front();\n    q.pop();\n    //默认胜场为零\n    cnt = 0;\n    while(cnt < m){\n        //一次循环代表进行一场比赛\n        cnt2 ++;\n        y = q.front();\n        //将基准h与现在队首的y相比较\n        if(h > y){\n            //如果h胜了，他继续当基准，然后他的胜场+1\n            cnt++;\n            //将队首的y取出，放到队列\n            q.pop();\n            q.push(y);\n        }\n        else{\n            //如果y胜了，把原来的h放到队尾，然后将y作为基准，他的胜场置为1，\n            q.pop();\n            q.push(h);\n            h = y;\n            cnt = 1;\n        }\n    }\n    cout << cnt2 << endl;\n    return 0;\n}\n```\n\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815","source":"_posts/39.md","raw":"---\ntitle: 🚥360校招——最后赢家（C++）\ntags: \n- c++\n- 算法\ndate: 2021-03-21 00:42:41\ncategories:\n- 招聘\n- 笔试\n---\n\n> [ ⭐ 文章链接: myj.im/archives/39/ ⭐ ](https://myj.im/archives/39/) \n\n>时间限制：C/C++语言 1000MS；其他语言 3000MS\n>内存限制：C/C++语言 65536KB；其他语言 589824KB\n\n### 题目描述：\n最强的不一定是最后的赢家。\n\n某赛事有n名选手参加，但是不同于其他的比赛，本比赛采取的是擂台赛的形式，n名选手排成一排，每次队伍的第一位和第二位选手进行比赛，输的一方会排到队尾。\n\n当某位选手取得m连胜时，他将成为最后的赢家，且游戏结束，请问截止到游戏结束，共会进行多少次比赛。\n\n两位选手的比赛结果由他们的战斗力决定，n位选手的战斗力是一个1~n的排列，也就是说他们的战斗力两两不同，不会有平局的情况。\n\n#### 输入\n输入第一行包含两个正整数n，m，分别代表参赛选手数量和取得连胜的要求。(1<=n<=100000，1<=m<=10^9)\n\n输入第二行包含n个正整数，中间用空格隔开，第i个数表示队伍的第i位选手的战斗力，整体是一个1~n的排列。\n\n#### 输出\n输出仅包含一个正整数，表示截止到游戏终止，共进行多少场比赛。\n\n\n#### 样例输入\n4 2\n1 3 2 4\n#### 样例输出\n2\n\n#### 提示\n样例解释\n显然第一局应该是战斗力为3的选手获胜，第二局同样是战斗力为3的选手获胜，2连胜终止游戏，所以答案是2。此时若修改m为3，则结果是5。\n\n\n### 代码\n解题思路写在代码的注释里\n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\nint main(){\n    //n，m，分别代表参赛选手数量和取得连胜的要求\n    //cnt记录作为基准选手的胜场数\n    int n, m, h, y, cnt;\n    //cnt2表示共进行了多少场比赛\n    int cnt2 = 0;\n    //定义队列来存储每位选手的战斗力\n    queue <int> q;\n    cin >> n >> m;\n    for(int i = 0; i < n; i++){\n        //将战斗力存储在队列中\n        cin >> h;\n        q.push(h);\n    }\n    //取出第一个队列当作基准\n    h = q.front();\n    q.pop();\n    //默认胜场为零\n    cnt = 0;\n    while(cnt < m){\n        //一次循环代表进行一场比赛\n        cnt2 ++;\n        y = q.front();\n        //将基准h与现在队首的y相比较\n        if(h > y){\n            //如果h胜了，他继续当基准，然后他的胜场+1\n            cnt++;\n            //将队首的y取出，放到队列\n            q.pop();\n            q.push(y);\n        }\n        else{\n            //如果y胜了，把原来的h放到队尾，然后将y作为基准，他的胜场置为1，\n            q.pop();\n            q.push(h);\n            h = y;\n            cnt = 1;\n        }\n    }\n    cout << cnt2 << endl;\n    return 0;\n}\n```\n\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815","slug":"39","published":1,"updated":"2025-01-04T21:41:30.409Z","_id":"cksgapz7d000460bwar6ih7xk","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><a href=\"https://myj.im/archives/39/\"> ⭐ 文章链接: myj.im/archives/39/ ⭐ </a> </p>\n</blockquote>\n<blockquote>\n<p>时间限制：C/C++语言 1000MS；其他语言 3000MS<br>内存限制：C/C++语言 65536KB；其他语言 589824KB</p>\n</blockquote>\n<h3 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><p>最强的不一定是最后的赢家。</p>\n<p>某赛事有n名选手参加，但是不同于其他的比赛，本比赛采取的是擂台赛的形式，n名选手排成一排，每次队伍的第一位和第二位选手进行比赛，输的一方会排到队尾。</p>\n<p>当某位选手取得m连胜时，他将成为最后的赢家，且游戏结束，请问截止到游戏结束，共会进行多少次比赛。</p>\n<p>两位选手的比赛结果由他们的战斗力决定，n位选手的战斗力是一个1~n的排列，也就是说他们的战斗力两两不同，不会有平局的情况。</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>输入第一行包含两个正整数n，m，分别代表参赛选手数量和取得连胜的要求。(1&lt;=n&lt;=100000，1&lt;=m&lt;=10^9)</p>\n<p>输入第二行包含n个正整数，中间用空格隔开，第i个数表示队伍的第i位选手的战斗力，整体是一个1~n的排列。</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>输出仅包含一个正整数，表示截止到游戏终止，共进行多少场比赛。</p>\n<h4 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h4><p>4 2<br>1 3 2 4</p>\n<h4 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h4><p>2</p>\n<h4 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>样例解释<br>显然第一局应该是战斗力为3的选手获胜，第二局同样是战斗力为3的选手获胜，2连胜终止游戏，所以答案是2。此时若修改m为3，则结果是5。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>解题思路写在代码的注释里</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;queue&gt;</span></span><br><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-comment\">//n，m，分别代表参赛选手数量和取得连胜的要求</span><br>    <span class=\"hljs-comment\">//cnt记录作为基准选手的胜场数</span><br>    <span class=\"hljs-keyword\">int</span> n, m, h, y, cnt;<br>    <span class=\"hljs-comment\">//cnt2表示共进行了多少场比赛</span><br>    <span class=\"hljs-keyword\">int</span> cnt2 = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-comment\">//定义队列来存储每位选手的战斗力</span><br>    <span class=\"hljs-built_in\">queue</span> &lt;<span class=\"hljs-keyword\">int</span>&gt; q;<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; n &gt;&gt; m;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)&#123;<br>        <span class=\"hljs-comment\">//将战斗力存储在队列中</span><br>        <span class=\"hljs-built_in\">cin</span> &gt;&gt; h;<br>        q.push(h);<br>    &#125;<br>    <span class=\"hljs-comment\">//取出第一个队列当作基准</span><br>    h = q.front();<br>    q.pop();<br>    <span class=\"hljs-comment\">//默认胜场为零</span><br>    cnt = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">while</span>(cnt &lt; m)&#123;<br>        <span class=\"hljs-comment\">//一次循环代表进行一场比赛</span><br>        cnt2 ++;<br>        y = q.front();<br>        <span class=\"hljs-comment\">//将基准h与现在队首的y相比较</span><br>        <span class=\"hljs-keyword\">if</span>(h &gt; y)&#123;<br>            <span class=\"hljs-comment\">//如果h胜了，他继续当基准，然后他的胜场+1</span><br>            cnt++;<br>            <span class=\"hljs-comment\">//将队首的y取出，放到队列</span><br>            q.pop();<br>            q.push(y);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-comment\">//如果y胜了，把原来的h放到队尾，然后将y作为基准，他的胜场置为1，</span><br>            q.pop();<br>            q.push(h);<br>            h = y;<br>            cnt = <span class=\"hljs-number\">1</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">cout</span> &lt;&lt; cnt2 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://myj.im/archives/39/\"> ⭐ 文章链接: myj.im/archives/39/ ⭐ </a> </p>\n</blockquote>\n<blockquote>\n<p>时间限制：C/C++语言 1000MS；其他语言 3000MS<br>内存限制：C/C++语言 65536KB；其他语言 589824KB</p>\n</blockquote>\n<h3 id=\"题目描述：\"><a href=\"#题目描述：\" class=\"headerlink\" title=\"题目描述：\"></a>题目描述：</h3><p>最强的不一定是最后的赢家。</p>\n<p>某赛事有n名选手参加，但是不同于其他的比赛，本比赛采取的是擂台赛的形式，n名选手排成一排，每次队伍的第一位和第二位选手进行比赛，输的一方会排到队尾。</p>\n<p>当某位选手取得m连胜时，他将成为最后的赢家，且游戏结束，请问截止到游戏结束，共会进行多少次比赛。</p>\n<p>两位选手的比赛结果由他们的战斗力决定，n位选手的战斗力是一个1~n的排列，也就是说他们的战斗力两两不同，不会有平局的情况。</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>输入第一行包含两个正整数n，m，分别代表参赛选手数量和取得连胜的要求。(1&lt;=n&lt;=100000，1&lt;=m&lt;=10^9)</p>\n<p>输入第二行包含n个正整数，中间用空格隔开，第i个数表示队伍的第i位选手的战斗力，整体是一个1~n的排列。</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>输出仅包含一个正整数，表示截止到游戏终止，共进行多少场比赛。</p>\n<h4 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h4><p>4 2<br>1 3 2 4</p>\n<h4 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h4><p>2</p>\n<h4 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>样例解释<br>显然第一局应该是战斗力为3的选手获胜，第二局同样是战斗力为3的选手获胜，2连胜终止游戏，所以答案是2。此时若修改m为3，则结果是5。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>解题思路写在代码的注释里</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;queue&gt;</span></span><br><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-comment\">//n，m，分别代表参赛选手数量和取得连胜的要求</span><br>    <span class=\"hljs-comment\">//cnt记录作为基准选手的胜场数</span><br>    <span class=\"hljs-keyword\">int</span> n, m, h, y, cnt;<br>    <span class=\"hljs-comment\">//cnt2表示共进行了多少场比赛</span><br>    <span class=\"hljs-keyword\">int</span> cnt2 = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-comment\">//定义队列来存储每位选手的战斗力</span><br>    <span class=\"hljs-built_in\">queue</span> &lt;<span class=\"hljs-keyword\">int</span>&gt; q;<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; n &gt;&gt; m;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)&#123;<br>        <span class=\"hljs-comment\">//将战斗力存储在队列中</span><br>        <span class=\"hljs-built_in\">cin</span> &gt;&gt; h;<br>        q.push(h);<br>    &#125;<br>    <span class=\"hljs-comment\">//取出第一个队列当作基准</span><br>    h = q.front();<br>    q.pop();<br>    <span class=\"hljs-comment\">//默认胜场为零</span><br>    cnt = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">while</span>(cnt &lt; m)&#123;<br>        <span class=\"hljs-comment\">//一次循环代表进行一场比赛</span><br>        cnt2 ++;<br>        y = q.front();<br>        <span class=\"hljs-comment\">//将基准h与现在队首的y相比较</span><br>        <span class=\"hljs-keyword\">if</span>(h &gt; y)&#123;<br>            <span class=\"hljs-comment\">//如果h胜了，他继续当基准，然后他的胜场+1</span><br>            cnt++;<br>            <span class=\"hljs-comment\">//将队首的y取出，放到队列</span><br>            q.pop();<br>            q.push(y);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-comment\">//如果y胜了，把原来的h放到队尾，然后将y作为基准，他的胜场置为1，</span><br>            q.pop();<br>            q.push(h);<br>            h = y;<br>            cnt = <span class=\"hljs-number\">1</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">cout</span> &lt;&lt; cnt2 &lt;&lt; <span class=\"hljs-built_in\">endl</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n"},{"title":"⏰java中的Format时间和时间戳","date":"2021-03-13T13:50:40.000Z","_content":"\n## 🧐format时间和时间戳\n\nTimestamp就是所谓的时间戳。这个主要用在数据库上，你可以再java.sql这个包内找到这个类。\n\n一般数据库里如果用Date这个类的话，那你取出来的时候只能到某一天，也就是日，但是Timestamp的话，就是到小时一直到纳秒，很精确的。\n\n时间戳就是一种类型，只是精度很高，比datetime要精确的多，通常用来防止数据出现脏读现象 。\n\n时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数\n\n## 🔃java中format时间和时间戳的转换\n\n```java\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\n/**\n * @author MengYingjie\n * @version 1.0\n * @date 2020/10/26 21:33\n */\npublic class Test2 {\n\n    public static void main(String[] args) {\n        Long SystemTimeStamp = System.currentTimeMillis();\n        System.out.println(\"时间:\" + SystemTimeStamp);\n        String timeFormat = stampToDate(SystemTimeStamp);\n        System.out.println(\"时间戳转换为时间:\" + timeFormat);\n        Long timeStamp = dateToStamp(timeFormat);\n        System.out.println(\"时间转换为时间戳:\" + timeStamp);\n    }\n\n    /**\n     * 将时间转换为时间戳\n     *\n     * @param timeFormat format 时间格式\n     * @return 时间戳时间格式\n     */\n    public static Long dateToStamp(String timeFormat) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        Long timeStamp = null;\n        try {\n            timeStamp = sdf.parse(timeFormat).getTime();\n        } catch (Exception e) {\n            System.out.println(\"传入了null值\");\n        }\n        return timeStamp;\n    }\n\n    /**\n     * 将时间戳转换为时间\n     *\n     * @param timeStamp 时间戳时间格式\n     * @return format 时间格式\n     */\n    public static String stampToDate(Long timeStamp) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        String timeFormat = format.format(new Date(timeStamp));\n        return timeFormat;\n    }\n}\n```\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815\n","source":"_posts/java中的Format时间和时间戳.md","raw":"---\ntitle: ⏰java中的Format时间和时间戳\ntags: \n- java\ndate: 2021-03-13 21:50:40\ncategories:\n- java\n- 技巧\n---\n\n## 🧐format时间和时间戳\n\nTimestamp就是所谓的时间戳。这个主要用在数据库上，你可以再java.sql这个包内找到这个类。\n\n一般数据库里如果用Date这个类的话，那你取出来的时候只能到某一天，也就是日，但是Timestamp的话，就是到小时一直到纳秒，很精确的。\n\n时间戳就是一种类型，只是精度很高，比datetime要精确的多，通常用来防止数据出现脏读现象 。\n\n时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数\n\n## 🔃java中format时间和时间戳的转换\n\n```java\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\n/**\n * @author MengYingjie\n * @version 1.0\n * @date 2020/10/26 21:33\n */\npublic class Test2 {\n\n    public static void main(String[] args) {\n        Long SystemTimeStamp = System.currentTimeMillis();\n        System.out.println(\"时间:\" + SystemTimeStamp);\n        String timeFormat = stampToDate(SystemTimeStamp);\n        System.out.println(\"时间戳转换为时间:\" + timeFormat);\n        Long timeStamp = dateToStamp(timeFormat);\n        System.out.println(\"时间转换为时间戳:\" + timeStamp);\n    }\n\n    /**\n     * 将时间转换为时间戳\n     *\n     * @param timeFormat format 时间格式\n     * @return 时间戳时间格式\n     */\n    public static Long dateToStamp(String timeFormat) {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        Long timeStamp = null;\n        try {\n            timeStamp = sdf.parse(timeFormat).getTime();\n        } catch (Exception e) {\n            System.out.println(\"传入了null值\");\n        }\n        return timeStamp;\n    }\n\n    /**\n     * 将时间戳转换为时间\n     *\n     * @param timeStamp 时间戳时间格式\n     * @return format 时间格式\n     */\n    public static String stampToDate(Long timeStamp) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        String timeFormat = format.format(new Date(timeStamp));\n        return timeFormat;\n    }\n}\n```\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815\n","slug":"java中的Format时间和时间戳","published":1,"updated":"2025-01-04T20:31:11.897Z","_id":"cksgapz7f000660bw63zqck27","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"🧐format时间和时间戳\"><a href=\"#🧐format时间和时间戳\" class=\"headerlink\" title=\"🧐format时间和时间戳\"></a>🧐format时间和时间戳</h2><p>Timestamp就是所谓的时间戳。这个主要用在数据库上，你可以再java.sql这个包内找到这个类。</p>\n<p>一般数据库里如果用Date这个类的话，那你取出来的时候只能到某一天，也就是日，但是Timestamp的话，就是到小时一直到纳秒，很精确的。</p>\n<p>时间戳就是一种类型，只是精度很高，比datetime要精确的多，通常用来防止数据出现脏读现象 。</p>\n<p>时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数</p>\n<h2 id=\"🔃java中format时间和时间戳的转换\"><a href=\"#🔃java中format时间和时间戳的转换\" class=\"headerlink\" title=\"🔃java中format时间和时间戳的转换\"></a>🔃java中format时间和时间戳的转换</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.text.SimpleDateFormat;<br><span class=\"hljs-keyword\">import</span> java.util.Date;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> MengYingjie</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/10/26 21:33</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test2</span> </span>&#123;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>        Long SystemTimeStamp = System.currentTimeMillis();<br>        System.out.println(<span class=\"hljs-string\">&quot;时间:&quot;</span> + SystemTimeStamp);<br>        String timeFormat = stampToDate(SystemTimeStamp);<br>        System.out.println(<span class=\"hljs-string\">&quot;时间戳转换为时间:&quot;</span> + timeFormat);<br>        Long timeStamp = dateToStamp(timeFormat);<br>        System.out.println(<span class=\"hljs-string\">&quot;时间转换为时间戳:&quot;</span> + timeStamp);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 将时间转换为时间戳</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> timeFormat format 时间格式</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span> 时间戳时间格式</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Long <span class=\"hljs-title\">dateToStamp</span><span class=\"hljs-params\">(String timeFormat)</span> </span>&#123;<br>        SimpleDateFormat sdf = <span class=\"hljs-keyword\">new</span> SimpleDateFormat(<span class=\"hljs-string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>        Long timeStamp = <span class=\"hljs-keyword\">null</span>;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            timeStamp = sdf.parse(timeFormat).getTime();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (Exception e) &#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;传入了null值&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> timeStamp;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 将时间戳转换为时间</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> timeStamp 时间戳时间格式</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span> format 时间格式</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">stampToDate</span><span class=\"hljs-params\">(Long timeStamp)</span> </span>&#123;<br>        SimpleDateFormat format = <span class=\"hljs-keyword\">new</span> SimpleDateFormat(<span class=\"hljs-string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>        String timeFormat = format.format(<span class=\"hljs-keyword\">new</span> Date(timeStamp));<br>        <span class=\"hljs-keyword\">return</span> timeFormat;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n","site":{"data":{}},"wordcount":1466,"excerpt":"","more":"<h2 id=\"🧐format时间和时间戳\"><a href=\"#🧐format时间和时间戳\" class=\"headerlink\" title=\"🧐format时间和时间戳\"></a>🧐format时间和时间戳</h2><p>Timestamp就是所谓的时间戳。这个主要用在数据库上，你可以再java.sql这个包内找到这个类。</p>\n<p>一般数据库里如果用Date这个类的话，那你取出来的时候只能到某一天，也就是日，但是Timestamp的话，就是到小时一直到纳秒，很精确的。</p>\n<p>时间戳就是一种类型，只是精度很高，比datetime要精确的多，通常用来防止数据出现脏读现象 。</p>\n<p>时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数</p>\n<h2 id=\"🔃java中format时间和时间戳的转换\"><a href=\"#🔃java中format时间和时间戳的转换\" class=\"headerlink\" title=\"🔃java中format时间和时间戳的转换\"></a>🔃java中format时间和时间戳的转换</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.text.SimpleDateFormat;<br><span class=\"hljs-keyword\">import</span> java.util.Date;<br><br><span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@author</span> MengYingjie</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@version</span> 1.0</span><br><span class=\"hljs-comment\"> * <span class=\"hljs-doctag\">@date</span> 2020/10/26 21:33</span><br><span class=\"hljs-comment\"> */</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test2</span> </span>&#123;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>        Long SystemTimeStamp = System.currentTimeMillis();<br>        System.out.println(<span class=\"hljs-string\">&quot;时间:&quot;</span> + SystemTimeStamp);<br>        String timeFormat = stampToDate(SystemTimeStamp);<br>        System.out.println(<span class=\"hljs-string\">&quot;时间戳转换为时间:&quot;</span> + timeFormat);<br>        Long timeStamp = dateToStamp(timeFormat);<br>        System.out.println(<span class=\"hljs-string\">&quot;时间转换为时间戳:&quot;</span> + timeStamp);<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 将时间转换为时间戳</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> timeFormat format 时间格式</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span> 时间戳时间格式</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Long <span class=\"hljs-title\">dateToStamp</span><span class=\"hljs-params\">(String timeFormat)</span> </span>&#123;<br>        SimpleDateFormat sdf = <span class=\"hljs-keyword\">new</span> SimpleDateFormat(<span class=\"hljs-string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>        Long timeStamp = <span class=\"hljs-keyword\">null</span>;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            timeStamp = sdf.parse(timeFormat).getTime();<br>        &#125; <span class=\"hljs-keyword\">catch</span> (Exception e) &#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;传入了null值&quot;</span>);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> timeStamp;<br>    &#125;<br><br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * 将时间戳转换为时间</span><br><span class=\"hljs-comment\">     *</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@param</span> timeStamp 时间戳时间格式</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span> format 时间格式</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title\">stampToDate</span><span class=\"hljs-params\">(Long timeStamp)</span> </span>&#123;<br>        SimpleDateFormat format = <span class=\"hljs-keyword\">new</span> SimpleDateFormat(<span class=\"hljs-string\">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>        String timeFormat = format.format(<span class=\"hljs-keyword\">new</span> Date(timeStamp));<br>        <span class=\"hljs-keyword\">return</span> timeFormat;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n"},{"title":"🤔为什么JAVA内部类要设计成静态和非静态","date":"2021-03-07T01:50:40.000Z","_content":"\n### 📋两种内部类用法\n\n```java\nstatic class Outer {\n\tclass Inner {}\n\tstatic class StaticInner {}\n}\n\nOuter outer = new Outer();\nOuter.Inner inner = outer.new Inner();\nOuter.StaticInner inner0 = new Outer.StaticInner();\n```\n\n### 🤔为什么设计内部类\n\n1 在一个类内部，需要操作某种属性，而这个属性需要涉及的面又很广，我们可以考虑，将这些属性设计为内部类。\n\n2 好比你设计类 B 的目的只是为了给类 A 使用，那么，我们就可将其设定为内部类，没有必要将类 B 设置成单独的 Java 文件，防止与其他类产生依赖关系。\n\n### 🎲解释\n\n根据Oracle官方的说法：\nNested classes are divided into two categories: static and non-static. Nested classes that are declared static are called ***static nested classes***. Non-static nested classes are called ***inner classes***.\n从字面上看，一个被称为静态嵌套类，一个被称为内部类。\n\n从字面的角度解释是这样的：\n\n1 什么是嵌套？嵌套就是我跟你没关系，自己可以完全独立存在，但是我就想借你的壳用一下，来隐藏一下我自己（真TM猥琐）。没有你，我也可以创建实例.\n\n2 什么是内部？内部就是我是你的一部分，我了解你，我知道你的全部（自由使用外部类的所有变量和方法），没有你就没有我。（所以内部类对象是以外部类对象存在为前提的）\n\n### 🎬运用场景\n\n1 那么，在设计内部类的时候我们就可以做出权衡：如果我内部类与你外部类关系不紧密，耦合程度不高，不需要访问外部类的所有属性或方法，那么我就设计成静态内部类。它可以降低包的深度，方便类的使用和管理类结构，而且，由于静态内部类与外部类并不会保存相互之间的引用，因此在一定程度上，还会节省那么一点内存资源，何乐而不为呢~~\n\n2 既然上面已经说了什么时候应该用静态内部类，那么如果你的需求不符合静态内部类所提供的一切好处，你就应该考虑使用内部类了。最大的特点就是：你在内部类中需要访问有关外部类的所有属性及方法，我知晓你的一切... ... \n\n> 官网场景用例介绍\n> 传送门：[http://docs.oracle.com/javase/](http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html)\n\n> 参考\n> 链接：https://www.zhihu.com/question/28197253/answer/39814613\n\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815","source":"_posts/为什么JAVA内部类要设计成静态和非静态.md","raw":"---\ntitle: 🤔为什么JAVA内部类要设计成静态和非静态\ntags: \n- java\ndate: 2021-03-07 09:50:40\ncategories:\n- java\n- 技巧\n---\n\n### 📋两种内部类用法\n\n```java\nstatic class Outer {\n\tclass Inner {}\n\tstatic class StaticInner {}\n}\n\nOuter outer = new Outer();\nOuter.Inner inner = outer.new Inner();\nOuter.StaticInner inner0 = new Outer.StaticInner();\n```\n\n### 🤔为什么设计内部类\n\n1 在一个类内部，需要操作某种属性，而这个属性需要涉及的面又很广，我们可以考虑，将这些属性设计为内部类。\n\n2 好比你设计类 B 的目的只是为了给类 A 使用，那么，我们就可将其设定为内部类，没有必要将类 B 设置成单独的 Java 文件，防止与其他类产生依赖关系。\n\n### 🎲解释\n\n根据Oracle官方的说法：\nNested classes are divided into two categories: static and non-static. Nested classes that are declared static are called ***static nested classes***. Non-static nested classes are called ***inner classes***.\n从字面上看，一个被称为静态嵌套类，一个被称为内部类。\n\n从字面的角度解释是这样的：\n\n1 什么是嵌套？嵌套就是我跟你没关系，自己可以完全独立存在，但是我就想借你的壳用一下，来隐藏一下我自己（真TM猥琐）。没有你，我也可以创建实例.\n\n2 什么是内部？内部就是我是你的一部分，我了解你，我知道你的全部（自由使用外部类的所有变量和方法），没有你就没有我。（所以内部类对象是以外部类对象存在为前提的）\n\n### 🎬运用场景\n\n1 那么，在设计内部类的时候我们就可以做出权衡：如果我内部类与你外部类关系不紧密，耦合程度不高，不需要访问外部类的所有属性或方法，那么我就设计成静态内部类。它可以降低包的深度，方便类的使用和管理类结构，而且，由于静态内部类与外部类并不会保存相互之间的引用，因此在一定程度上，还会节省那么一点内存资源，何乐而不为呢~~\n\n2 既然上面已经说了什么时候应该用静态内部类，那么如果你的需求不符合静态内部类所提供的一切好处，你就应该考虑使用内部类了。最大的特点就是：你在内部类中需要访问有关外部类的所有属性及方法，我知晓你的一切... ... \n\n> 官网场景用例介绍\n> 传送门：[http://docs.oracle.com/javase/](http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html)\n\n> 参考\n> 链接：https://www.zhihu.com/question/28197253/answer/39814613\n\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815","slug":"为什么JAVA内部类要设计成静态和非静态","published":1,"updated":"2025-01-04T21:40:19.055Z","_id":"cksgapz7h000760bw2bjz4kht","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"📋两种内部类用法\"><a href=\"#📋两种内部类用法\" class=\"headerlink\" title=\"📋两种内部类用法\"></a>📋两种内部类用法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Outer</span> </span>&#123;<br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Inner</span> </span>&#123;&#125;<br>\t<span class=\"hljs-keyword\">static</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StaticInner</span> </span>&#123;&#125;<br>&#125;<br><br>Outer outer = <span class=\"hljs-keyword\">new</span> Outer();<br>Outer.Inner inner = outer.<span class=\"hljs-function\">new <span class=\"hljs-title\">Inner</span><span class=\"hljs-params\">()</span></span>;<br>Outer.StaticInner inner0 = <span class=\"hljs-keyword\">new</span> Outer.StaticInner();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"🤔为什么设计内部类\"><a href=\"#🤔为什么设计内部类\" class=\"headerlink\" title=\"🤔为什么设计内部类\"></a>🤔为什么设计内部类</h3><p>1 在一个类内部，需要操作某种属性，而这个属性需要涉及的面又很广，我们可以考虑，将这些属性设计为内部类。</p>\n<p>2 好比你设计类 B 的目的只是为了给类 A 使用，那么，我们就可将其设定为内部类，没有必要将类 B 设置成单独的 Java 文件，防止与其他类产生依赖关系。</p>\n<h3 id=\"🎲解释\"><a href=\"#🎲解释\" class=\"headerlink\" title=\"🎲解释\"></a>🎲解释</h3><p>根据Oracle官方的说法：<br>Nested classes are divided into two categories: static and non-static. Nested classes that are declared static are called <em><strong>static nested classes</strong></em>. Non-static nested classes are called <em><strong>inner classes</strong></em>.<br>从字面上看，一个被称为静态嵌套类，一个被称为内部类。</p>\n<p>从字面的角度解释是这样的：</p>\n<p>1 什么是嵌套？嵌套就是我跟你没关系，自己可以完全独立存在，但是我就想借你的壳用一下，来隐藏一下我自己（真TM猥琐）。没有你，我也可以创建实例.</p>\n<p>2 什么是内部？内部就是我是你的一部分，我了解你，我知道你的全部（自由使用外部类的所有变量和方法），没有你就没有我。（所以内部类对象是以外部类对象存在为前提的）</p>\n<h3 id=\"🎬运用场景\"><a href=\"#🎬运用场景\" class=\"headerlink\" title=\"🎬运用场景\"></a>🎬运用场景</h3><p>1 那么，在设计内部类的时候我们就可以做出权衡：如果我内部类与你外部类关系不紧密，耦合程度不高，不需要访问外部类的所有属性或方法，那么我就设计成静态内部类。它可以降低包的深度，方便类的使用和管理类结构，而且，由于静态内部类与外部类并不会保存相互之间的引用，因此在一定程度上，还会节省那么一点内存资源，何乐而不为呢~~</p>\n<p>2 既然上面已经说了什么时候应该用静态内部类，那么如果你的需求不符合静态内部类所提供的一切好处，你就应该考虑使用内部类了。最大的特点就是：你在内部类中需要访问有关外部类的所有属性及方法，我知晓你的一切… … </p>\n<blockquote>\n<p>官网场景用例介绍<br>传送门：<a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html\">http://docs.oracle.com/javase/</a></p>\n</blockquote>\n<blockquote>\n<p>参考<br>链接：<a href=\"https://www.zhihu.com/question/28197253/answer/39814613\">https://www.zhihu.com/question/28197253/answer/39814613</a></p>\n</blockquote>\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"📋两种内部类用法\"><a href=\"#📋两种内部类用法\" class=\"headerlink\" title=\"📋两种内部类用法\"></a>📋两种内部类用法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Outer</span> </span>&#123;<br>\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Inner</span> </span>&#123;&#125;<br>\t<span class=\"hljs-keyword\">static</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StaticInner</span> </span>&#123;&#125;<br>&#125;<br><br>Outer outer = <span class=\"hljs-keyword\">new</span> Outer();<br>Outer.Inner inner = outer.<span class=\"hljs-function\">new <span class=\"hljs-title\">Inner</span><span class=\"hljs-params\">()</span></span>;<br>Outer.StaticInner inner0 = <span class=\"hljs-keyword\">new</span> Outer.StaticInner();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"🤔为什么设计内部类\"><a href=\"#🤔为什么设计内部类\" class=\"headerlink\" title=\"🤔为什么设计内部类\"></a>🤔为什么设计内部类</h3><p>1 在一个类内部，需要操作某种属性，而这个属性需要涉及的面又很广，我们可以考虑，将这些属性设计为内部类。</p>\n<p>2 好比你设计类 B 的目的只是为了给类 A 使用，那么，我们就可将其设定为内部类，没有必要将类 B 设置成单独的 Java 文件，防止与其他类产生依赖关系。</p>\n<h3 id=\"🎲解释\"><a href=\"#🎲解释\" class=\"headerlink\" title=\"🎲解释\"></a>🎲解释</h3><p>根据Oracle官方的说法：<br>Nested classes are divided into two categories: static and non-static. Nested classes that are declared static are called <em><strong>static nested classes</strong></em>. Non-static nested classes are called <em><strong>inner classes</strong></em>.<br>从字面上看，一个被称为静态嵌套类，一个被称为内部类。</p>\n<p>从字面的角度解释是这样的：</p>\n<p>1 什么是嵌套？嵌套就是我跟你没关系，自己可以完全独立存在，但是我就想借你的壳用一下，来隐藏一下我自己（真TM猥琐）。没有你，我也可以创建实例.</p>\n<p>2 什么是内部？内部就是我是你的一部分，我了解你，我知道你的全部（自由使用外部类的所有变量和方法），没有你就没有我。（所以内部类对象是以外部类对象存在为前提的）</p>\n<h3 id=\"🎬运用场景\"><a href=\"#🎬运用场景\" class=\"headerlink\" title=\"🎬运用场景\"></a>🎬运用场景</h3><p>1 那么，在设计内部类的时候我们就可以做出权衡：如果我内部类与你外部类关系不紧密，耦合程度不高，不需要访问外部类的所有属性或方法，那么我就设计成静态内部类。它可以降低包的深度，方便类的使用和管理类结构，而且，由于静态内部类与外部类并不会保存相互之间的引用，因此在一定程度上，还会节省那么一点内存资源，何乐而不为呢~~</p>\n<p>2 既然上面已经说了什么时候应该用静态内部类，那么如果你的需求不符合静态内部类所提供的一切好处，你就应该考虑使用内部类了。最大的特点就是：你在内部类中需要访问有关外部类的所有属性及方法，我知晓你的一切… … </p>\n<blockquote>\n<p>官网场景用例介绍<br>传送门：<a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/nested.html\">http://docs.oracle.com/javase/</a></p>\n</blockquote>\n<blockquote>\n<p>参考<br>链接：<a href=\"https://www.zhihu.com/question/28197253/answer/39814613\">https://www.zhihu.com/question/28197253/answer/39814613</a></p>\n</blockquote>\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n"},{"title":"🎯美团笔试-空间回廊","date":"2021-03-04T01:39:50.000Z","typora-root-url":"美团笔试-空间回廊","_content":"\n> [⭐ 孟应杰的网站: myj.im ⭐](https://myj.im/)\n\n\n### 📌题目描述：\n\n有一款叫做空间回廊的游戏，游戏中有着n个房间依次相连，如图，1号房间可以走到2号房间，以此类推，n号房间可以走到1号房间。\n\n这个游戏的最终目的是为了在这些房间中留下尽可能多的烙印，在每个房间里留下烙印所花费的法力值是不相同的，已知他共有m点法力值，这些法力是不可恢复的。\n\n![](36-1.jpg)\n\n小明刚接触这款游戏，所以只会耿直的玩，所以他的每一个行动都是可以预料的：\n\n1.一开始小明位于1号房间。  \n2.如果他剩余的法力能在当前的房间中留下一个烙印，那么他就会毫不犹豫的花费法力值。  \n3.无论是否留下了烙印，下一个时刻他都会进入下一个房间，如果当前位于i房间，则会进入i+1房间，如果在n号房间则会进入1号房间。  \n4.当重复经过某一个房间时，可以再次留下烙印。\n\n很显然，这个游戏是会终止的，即剩余的法力值不能在任何房间留下烙印的时候，游戏终止。请问他共能留下多少个烙印。\n\n#### 输入\n\n输入第一行有两个正整数n和m，分别代表房间数量和小明拥有的法力值。(1<=n<=100000,1<=m<=10^18)  \n输入第二行有n个正整数，分别代表1~n号房间留下烙印的法力值花费。(1<=a_i<=10^9)\n\n#### 输出\n\n输出仅包含一个整数，即最多能留下的烙印。\n\n#### 样例输入\n\n4 21  \n2 1 4 3\n\n#### 样例输出\n\n9\n\n#### 提示\n\n样例解释： \n显然是所有房间都留下两个烙印，然后剩下1点法力值，仅能在2号房间再留下一个烙印.\n\n### ⌨代码实现\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint main(){\n    //输入房间数量m，小明拥有的法力值n\n    int n, m;\n    cin >> n >> m;\n    //输入每个房间消耗的法力值\n    int arr[n];\n    for(int i = 0; i < n; i++){\n        cin >> arr[i];\n    }\n    //定义两个变量，cnt用来计数，记录留下的烙印数\n    //sign,为设立的标志，当小明在一圈中消耗过法力值，标志位置为1，\n    //如果一圈下来sign=0，那么代表这一圈小明没有消耗法力值，那么就可以结束循环了。\n    int cnt = 0;\n    int sign = 0;\n    //循环开始，因为不知道要循环多少遍，所以中间参数为空\n    for(int i = 0;  ; i++ ){\n        //如果法力值大于当前格子的法力值\n        if( m >= arr[i]){\n            m = m - arr[i]; //法力值减去当前格子的法力值\n            cnt++;          //烙印数+1\n            sign = 1;       //本圈消耗了法力值，sign=1\n        }\n        //当i = n - 1，说明一次循环结束，如果sign=1，则需要进行下一轮循环\n        //那么就把sign归0，有因为结束时会有i++，所以i=0-1，那么就开启新一轮循环\n        if((i == n - 1) && (sign == 1)){\n            sign = 0;\n            i = 0-1;\n        }\n        //当i = n - 1，循环结束，sign=0，则不需要继续循环，直接跳出死循环。\n        else if((i == n - 1) && (sign == 0)){\n            break;\n        }\n    }\n    cout << cnt << endl;\n    return 0;\n\n}\n```\n\n> 遇到此类问题，但看了文章还是未解决 \n> 评论或加 QQ：781378815","source":"_posts/美团笔试-空间回廊.md","raw":"---\ntitle: 🎯美团笔试-空间回廊\ntags:\n  - c++\n  - 算法\ndate: 2021-03-04 09:39:50\ncategories:\n  - 招聘\n  - 笔试\ntypora-root-url: 美团笔试-空间回廊\n---\n\n> [⭐ 孟应杰的网站: myj.im ⭐](https://myj.im/)\n\n\n### 📌题目描述：\n\n有一款叫做空间回廊的游戏，游戏中有着n个房间依次相连，如图，1号房间可以走到2号房间，以此类推，n号房间可以走到1号房间。\n\n这个游戏的最终目的是为了在这些房间中留下尽可能多的烙印，在每个房间里留下烙印所花费的法力值是不相同的，已知他共有m点法力值，这些法力是不可恢复的。\n\n![](36-1.jpg)\n\n小明刚接触这款游戏，所以只会耿直的玩，所以他的每一个行动都是可以预料的：\n\n1.一开始小明位于1号房间。  \n2.如果他剩余的法力能在当前的房间中留下一个烙印，那么他就会毫不犹豫的花费法力值。  \n3.无论是否留下了烙印，下一个时刻他都会进入下一个房间，如果当前位于i房间，则会进入i+1房间，如果在n号房间则会进入1号房间。  \n4.当重复经过某一个房间时，可以再次留下烙印。\n\n很显然，这个游戏是会终止的，即剩余的法力值不能在任何房间留下烙印的时候，游戏终止。请问他共能留下多少个烙印。\n\n#### 输入\n\n输入第一行有两个正整数n和m，分别代表房间数量和小明拥有的法力值。(1<=n<=100000,1<=m<=10^18)  \n输入第二行有n个正整数，分别代表1~n号房间留下烙印的法力值花费。(1<=a_i<=10^9)\n\n#### 输出\n\n输出仅包含一个整数，即最多能留下的烙印。\n\n#### 样例输入\n\n4 21  \n2 1 4 3\n\n#### 样例输出\n\n9\n\n#### 提示\n\n样例解释： \n显然是所有房间都留下两个烙印，然后剩下1点法力值，仅能在2号房间再留下一个烙印.\n\n### ⌨代码实现\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint main(){\n    //输入房间数量m，小明拥有的法力值n\n    int n, m;\n    cin >> n >> m;\n    //输入每个房间消耗的法力值\n    int arr[n];\n    for(int i = 0; i < n; i++){\n        cin >> arr[i];\n    }\n    //定义两个变量，cnt用来计数，记录留下的烙印数\n    //sign,为设立的标志，当小明在一圈中消耗过法力值，标志位置为1，\n    //如果一圈下来sign=0，那么代表这一圈小明没有消耗法力值，那么就可以结束循环了。\n    int cnt = 0;\n    int sign = 0;\n    //循环开始，因为不知道要循环多少遍，所以中间参数为空\n    for(int i = 0;  ; i++ ){\n        //如果法力值大于当前格子的法力值\n        if( m >= arr[i]){\n            m = m - arr[i]; //法力值减去当前格子的法力值\n            cnt++;          //烙印数+1\n            sign = 1;       //本圈消耗了法力值，sign=1\n        }\n        //当i = n - 1，说明一次循环结束，如果sign=1，则需要进行下一轮循环\n        //那么就把sign归0，有因为结束时会有i++，所以i=0-1，那么就开启新一轮循环\n        if((i == n - 1) && (sign == 1)){\n            sign = 0;\n            i = 0-1;\n        }\n        //当i = n - 1，循环结束，sign=0，则不需要继续循环，直接跳出死循环。\n        else if((i == n - 1) && (sign == 0)){\n            break;\n        }\n    }\n    cout << cnt << endl;\n    return 0;\n\n}\n```\n\n> 遇到此类问题，但看了文章还是未解决 \n> 评论或加 QQ：781378815","slug":"美团笔试-空间回廊","published":1,"updated":"2025-01-04T21:43:35.374Z","_id":"cksgapz7k000a60bw2ylu5cbx","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><a href=\"https://myj.im/\">⭐ 孟应杰的网站: myj.im ⭐</a></p>\n</blockquote>\n<h3 id=\"📌题目描述：\"><a href=\"#📌题目描述：\" class=\"headerlink\" title=\"📌题目描述：\"></a>📌题目描述：</h3><p>有一款叫做空间回廊的游戏，游戏中有着n个房间依次相连，如图，1号房间可以走到2号房间，以此类推，n号房间可以走到1号房间。</p>\n<p>这个游戏的最终目的是为了在这些房间中留下尽可能多的烙印，在每个房间里留下烙印所花费的法力值是不相同的，已知他共有m点法力值，这些法力是不可恢复的。</p>\n<p><img src=\"36-1.jpg\"></p>\n<p>小明刚接触这款游戏，所以只会耿直的玩，所以他的每一个行动都是可以预料的：</p>\n<p>1.一开始小明位于1号房间。<br>2.如果他剩余的法力能在当前的房间中留下一个烙印，那么他就会毫不犹豫的花费法力值。<br>3.无论是否留下了烙印，下一个时刻他都会进入下一个房间，如果当前位于i房间，则会进入i+1房间，如果在n号房间则会进入1号房间。<br>4.当重复经过某一个房间时，可以再次留下烙印。</p>\n<p>很显然，这个游戏是会终止的，即剩余的法力值不能在任何房间留下烙印的时候，游戏终止。请问他共能留下多少个烙印。</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>输入第一行有两个正整数n和m，分别代表房间数量和小明拥有的法力值。(1&lt;=n&lt;=100000,1&lt;=m&lt;=10^18)<br>输入第二行有n个正整数，分别代表1~n号房间留下烙印的法力值花费。(1&lt;=a_i&lt;=10^9)</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>输出仅包含一个整数，即最多能留下的烙印。</p>\n<h4 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h4><p>4 21<br>2 1 4 3</p>\n<h4 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h4><p>9</p>\n<h4 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>样例解释：<br>显然是所有房间都留下两个烙印，然后剩下1点法力值，仅能在2号房间再留下一个烙印.</p>\n<h3 id=\"⌨代码实现\"><a href=\"#⌨代码实现\" class=\"headerlink\" title=\"⌨代码实现\"></a>⌨代码实现</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-comment\">//输入房间数量m，小明拥有的法力值n</span><br>    <span class=\"hljs-keyword\">int</span> n, m;<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; n &gt;&gt; m;<br>    <span class=\"hljs-comment\">//输入每个房间消耗的法力值</span><br>    <span class=\"hljs-keyword\">int</span> arr[n];<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)&#123;<br>        <span class=\"hljs-built_in\">cin</span> &gt;&gt; arr[i];<br>    &#125;<br>    <span class=\"hljs-comment\">//定义两个变量，cnt用来计数，记录留下的烙印数</span><br>    <span class=\"hljs-comment\">//sign,为设立的标志，当小明在一圈中消耗过法力值，标志位置为1，</span><br>    <span class=\"hljs-comment\">//如果一圈下来sign=0，那么代表这一圈小明没有消耗法力值，那么就可以结束循环了。</span><br>    <span class=\"hljs-keyword\">int</span> cnt = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">int</span> sign = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-comment\">//循环开始，因为不知道要循环多少遍，所以中间参数为空</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;  ; i++ )&#123;<br>        <span class=\"hljs-comment\">//如果法力值大于当前格子的法力值</span><br>        <span class=\"hljs-keyword\">if</span>( m &gt;= arr[i])&#123;<br>            m = m - arr[i]; <span class=\"hljs-comment\">//法力值减去当前格子的法力值</span><br>            cnt++;          <span class=\"hljs-comment\">//烙印数+1</span><br>            sign = <span class=\"hljs-number\">1</span>;       <span class=\"hljs-comment\">//本圈消耗了法力值，sign=1</span><br>        &#125;<br>        <span class=\"hljs-comment\">//当i = n - 1，说明一次循环结束，如果sign=1，则需要进行下一轮循环</span><br>        <span class=\"hljs-comment\">//那么就把sign归0，有因为结束时会有i++，所以i=0-1，那么就开启新一轮循环</span><br>        <span class=\"hljs-keyword\">if</span>((i == n - <span class=\"hljs-number\">1</span>) &amp;&amp; (sign == <span class=\"hljs-number\">1</span>))&#123;<br>            sign = <span class=\"hljs-number\">0</span>;<br>            i = <span class=\"hljs-number\">0</span><span class=\"hljs-number\">-1</span>;<br>        &#125;<br>        <span class=\"hljs-comment\">//当i = n - 1，循环结束，sign=0，则不需要继续循环，直接跳出死循环。</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>((i == n - <span class=\"hljs-number\">1</span>) &amp;&amp; (sign == <span class=\"hljs-number\">0</span>))&#123;<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">cout</span> &lt;&lt; cnt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><a href=\"https://myj.im/\">⭐ 孟应杰的网站: myj.im ⭐</a></p>\n</blockquote>\n<h3 id=\"📌题目描述：\"><a href=\"#📌题目描述：\" class=\"headerlink\" title=\"📌题目描述：\"></a>📌题目描述：</h3><p>有一款叫做空间回廊的游戏，游戏中有着n个房间依次相连，如图，1号房间可以走到2号房间，以此类推，n号房间可以走到1号房间。</p>\n<p>这个游戏的最终目的是为了在这些房间中留下尽可能多的烙印，在每个房间里留下烙印所花费的法力值是不相同的，已知他共有m点法力值，这些法力是不可恢复的。</p>\n<p><img src=\"36-1.jpg\"></p>\n<p>小明刚接触这款游戏，所以只会耿直的玩，所以他的每一个行动都是可以预料的：</p>\n<p>1.一开始小明位于1号房间。<br>2.如果他剩余的法力能在当前的房间中留下一个烙印，那么他就会毫不犹豫的花费法力值。<br>3.无论是否留下了烙印，下一个时刻他都会进入下一个房间，如果当前位于i房间，则会进入i+1房间，如果在n号房间则会进入1号房间。<br>4.当重复经过某一个房间时，可以再次留下烙印。</p>\n<p>很显然，这个游戏是会终止的，即剩余的法力值不能在任何房间留下烙印的时候，游戏终止。请问他共能留下多少个烙印。</p>\n<h4 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h4><p>输入第一行有两个正整数n和m，分别代表房间数量和小明拥有的法力值。(1&lt;=n&lt;=100000,1&lt;=m&lt;=10^18)<br>输入第二行有n个正整数，分别代表1~n号房间留下烙印的法力值花费。(1&lt;=a_i&lt;=10^9)</p>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><p>输出仅包含一个整数，即最多能留下的烙印。</p>\n<h4 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h4><p>4 21<br>2 1 4 3</p>\n<h4 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h4><p>9</p>\n<h4 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>样例解释：<br>显然是所有房间都留下两个烙印，然后剩下1点法力值，仅能在2号房间再留下一个烙印.</p>\n<h3 id=\"⌨代码实现\"><a href=\"#⌨代码实现\" class=\"headerlink\" title=\"⌨代码实现\"></a>⌨代码实现</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span><span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span><br><span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-comment\">//输入房间数量m，小明拥有的法力值n</span><br>    <span class=\"hljs-keyword\">int</span> n, m;<br>    <span class=\"hljs-built_in\">cin</span> &gt;&gt; n &gt;&gt; m;<br>    <span class=\"hljs-comment\">//输入每个房间消耗的法力值</span><br>    <span class=\"hljs-keyword\">int</span> arr[n];<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n; i++)&#123;<br>        <span class=\"hljs-built_in\">cin</span> &gt;&gt; arr[i];<br>    &#125;<br>    <span class=\"hljs-comment\">//定义两个变量，cnt用来计数，记录留下的烙印数</span><br>    <span class=\"hljs-comment\">//sign,为设立的标志，当小明在一圈中消耗过法力值，标志位置为1，</span><br>    <span class=\"hljs-comment\">//如果一圈下来sign=0，那么代表这一圈小明没有消耗法力值，那么就可以结束循环了。</span><br>    <span class=\"hljs-keyword\">int</span> cnt = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">int</span> sign = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-comment\">//循环开始，因为不知道要循环多少遍，所以中间参数为空</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;  ; i++ )&#123;<br>        <span class=\"hljs-comment\">//如果法力值大于当前格子的法力值</span><br>        <span class=\"hljs-keyword\">if</span>( m &gt;= arr[i])&#123;<br>            m = m - arr[i]; <span class=\"hljs-comment\">//法力值减去当前格子的法力值</span><br>            cnt++;          <span class=\"hljs-comment\">//烙印数+1</span><br>            sign = <span class=\"hljs-number\">1</span>;       <span class=\"hljs-comment\">//本圈消耗了法力值，sign=1</span><br>        &#125;<br>        <span class=\"hljs-comment\">//当i = n - 1，说明一次循环结束，如果sign=1，则需要进行下一轮循环</span><br>        <span class=\"hljs-comment\">//那么就把sign归0，有因为结束时会有i++，所以i=0-1，那么就开启新一轮循环</span><br>        <span class=\"hljs-keyword\">if</span>((i == n - <span class=\"hljs-number\">1</span>) &amp;&amp; (sign == <span class=\"hljs-number\">1</span>))&#123;<br>            sign = <span class=\"hljs-number\">0</span>;<br>            i = <span class=\"hljs-number\">0</span><span class=\"hljs-number\">-1</span>;<br>        &#125;<br>        <span class=\"hljs-comment\">//当i = n - 1，循环结束，sign=0，则不需要继续循环，直接跳出死循环。</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>((i == n - <span class=\"hljs-number\">1</span>) &amp;&amp; (sign == <span class=\"hljs-number\">0</span>))&#123;<br>            <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-built_in\">cout</span> &lt;&lt; cnt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n"},{"title":"🔑json到Object到具体对象","date":"2021-03-02T01:39:50.000Z","_content":"\n## 🏡环境\n\nSpringBoot + lombok\n\n## 📋遇到需求\n\n大概意思\n\n给出一个参数通过URI接收一个对象test（可能是两种类的对象）和一个type（判断test类型）\n\n## 🌌假设：\n\n如果type为0，test为TestTest对象，\n\n如果type为1，test为TestTest2对象\n\n## 🔬实现过程：\n\nTestTest.class和TestTest2.class\n\n```java\n@Data\n@Accessors(chain = true)\npublic class TestTest {\n    String abc;\n    String aaa;\n\n    TestTest2 test2;\n}\n\n@Data\n@Accessors(chain = true)\npublic class TestTest2 {\n    String ddd;\n    String ccc;\n}\n```\n\nControler\n\n```java\n@RestController\n@RequestMapping(\"/api/v1\")\npublic class TestController {\n\n    private final Logger log = LoggerFactory.getLogger(TestController.class);\n\n    @PostMapping(\"/hello\")\n    public String helloWorld(String type,\n                             @RequestBody Object test) throws IOException {\n        \n        log.info(\"test {}\", test.toString());\n        if (type.equals(\"0\")) {\n            TestTest testTest = new TestTest();\n            ObjectMapper objectMapper = new ObjectMapper();\n            String testString = objectMapper.writeValueAsString(test);\n            testTest = objectMapper.readValue(testString, TestTest.class);\n            return testTest.toString();\n        }else if (type.equals(\"1\")){\n            TestTest2 testTest2 = new TestTest2();\n            ObjectMapper objectMapper = new ObjectMapper();\n            String testString = objectMapper.writeValueAsString(test);\n            testTest2 = objectMapper.readValue(testString, TestTest2.class);\n            return testTest2toString();\n        }\n        return \"error\";\n    }\n}\n```\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815\n\n","source":"_posts/🔑json到Object到具体对象.md","raw":"---\ntitle: 🔑json到Object到具体对象\ntags: \n- java\n- spring\ncategories:\n- java\n- spring\ndate: 2021-03-02 09:39:50\n---\n\n## 🏡环境\n\nSpringBoot + lombok\n\n## 📋遇到需求\n\n大概意思\n\n给出一个参数通过URI接收一个对象test（可能是两种类的对象）和一个type（判断test类型）\n\n## 🌌假设：\n\n如果type为0，test为TestTest对象，\n\n如果type为1，test为TestTest2对象\n\n## 🔬实现过程：\n\nTestTest.class和TestTest2.class\n\n```java\n@Data\n@Accessors(chain = true)\npublic class TestTest {\n    String abc;\n    String aaa;\n\n    TestTest2 test2;\n}\n\n@Data\n@Accessors(chain = true)\npublic class TestTest2 {\n    String ddd;\n    String ccc;\n}\n```\n\nControler\n\n```java\n@RestController\n@RequestMapping(\"/api/v1\")\npublic class TestController {\n\n    private final Logger log = LoggerFactory.getLogger(TestController.class);\n\n    @PostMapping(\"/hello\")\n    public String helloWorld(String type,\n                             @RequestBody Object test) throws IOException {\n        \n        log.info(\"test {}\", test.toString());\n        if (type.equals(\"0\")) {\n            TestTest testTest = new TestTest();\n            ObjectMapper objectMapper = new ObjectMapper();\n            String testString = objectMapper.writeValueAsString(test);\n            testTest = objectMapper.readValue(testString, TestTest.class);\n            return testTest.toString();\n        }else if (type.equals(\"1\")){\n            TestTest2 testTest2 = new TestTest2();\n            ObjectMapper objectMapper = new ObjectMapper();\n            String testString = objectMapper.writeValueAsString(test);\n            testTest2 = objectMapper.readValue(testString, TestTest2.class);\n            return testTest2toString();\n        }\n        return \"error\";\n    }\n}\n```\n\n> 遇到此类问题，但看了文章还是未解决\n> 评论或加 QQ：781378815\n\n","slug":"🔑json到Object到具体对象","published":1,"updated":"2025-01-04T20:31:31.814Z","_id":"cksgapz7p000c60bwe9919i90","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"🏡环境\"><a href=\"#🏡环境\" class=\"headerlink\" title=\"🏡环境\"></a>🏡环境</h2><p>SpringBoot + lombok</p>\n<h2 id=\"📋遇到需求\"><a href=\"#📋遇到需求\" class=\"headerlink\" title=\"📋遇到需求\"></a>📋遇到需求</h2><p>大概意思</p>\n<p>给出一个参数通过URI接收一个对象test（可能是两种类的对象）和一个type（判断test类型）</p>\n<h2 id=\"🌌假设：\"><a href=\"#🌌假设：\" class=\"headerlink\" title=\"🌌假设：\"></a>🌌假设：</h2><p>如果type为0，test为TestTest对象，</p>\n<p>如果type为1，test为TestTest2对象</p>\n<h2 id=\"🔬实现过程：\"><a href=\"#🔬实现过程：\" class=\"headerlink\" title=\"🔬实现过程：\"></a>🔬实现过程：</h2><p>TestTest.class和TestTest2.class</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Accessors(chain = true)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestTest</span> </span>&#123;<br>    String abc;<br>    String aaa;<br><br>    TestTest2 test2;<br>&#125;<br><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Accessors(chain = true)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestTest2</span> </span>&#123;<br>    String ddd;<br>    String ccc;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<p>Controler</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter hljs\"><div class=\"hljs code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></div></td><td class=\"code\"><div class=\"hljs code-wrapper\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@RequestMapping(&quot;/api/v1&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestController</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> Logger log = LoggerFactory.getLogger(TestController.class);<br><br>    <span class=\"hljs-meta\">@PostMapping(&quot;/hello&quot;)</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">helloWorld</span><span class=\"hljs-params\">(String type,</span></span><br><span class=\"hljs-function\"><span class=\"hljs-params\">                             <span class=\"hljs-meta\">@RequestBody</span> Object test)</span> <span class=\"hljs-keyword\">throws</span> IOException </span>&#123;<br>        <br>        log.info(<span class=\"hljs-string\">&quot;test &#123;&#125;&quot;</span>, test.toString());<br>        <span class=\"hljs-keyword\">if</span> (type.equals(<span class=\"hljs-string\">&quot;0&quot;</span>)) &#123;<br>            TestTest testTest = <span class=\"hljs-keyword\">new</span> TestTest();<br>            ObjectMapper objectMapper = <span class=\"hljs-keyword\">new</span> ObjectMapper();<br>            String testString = objectMapper.writeValueAsString(test);<br>            testTest = objectMapper.readValue(testString, TestTest.class);<br>            <span class=\"hljs-keyword\">return</span> testTest.toString();<br>        &#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (type.equals(<span class=\"hljs-string\">&quot;1&quot;</span>))&#123;<br>            TestTest2 testTest2 = <span class=\"hljs-keyword\">new</span> TestTest2();<br>            ObjectMapper objectMapper = <span class=\"hljs-keyword\">new</span> ObjectMapper();<br>            String testString = objectMapper.writeValueAsString(test);<br>            testTest2 = objectMapper.readValue(testString, TestTest2.class);<br>            <span class=\"hljs-keyword\">return</span> testTest2toString();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;error&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n","site":{"data":{}},"wordcount":1326,"excerpt":"","more":"<h2 id=\"🏡环境\"><a href=\"#🏡环境\" class=\"headerlink\" title=\"🏡环境\"></a>🏡环境</h2><p>SpringBoot + lombok</p>\n<h2 id=\"📋遇到需求\"><a href=\"#📋遇到需求\" class=\"headerlink\" title=\"📋遇到需求\"></a>📋遇到需求</h2><p>大概意思</p>\n<p>给出一个参数通过URI接收一个对象test（可能是两种类的对象）和一个type（判断test类型）</p>\n<h2 id=\"🌌假设：\"><a href=\"#🌌假设：\" class=\"headerlink\" title=\"🌌假设：\"></a>🌌假设：</h2><p>如果type为0，test为TestTest对象，</p>\n<p>如果type为1，test为TestTest2对象</p>\n<h2 id=\"🔬实现过程：\"><a href=\"#🔬实现过程：\" class=\"headerlink\" title=\"🔬实现过程：\"></a>🔬实现过程：</h2><p>TestTest.class和TestTest2.class</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Accessors(chain = true)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestTest</span> </span>&#123;<br>    String abc;<br>    String aaa;<br><br>    TestTest2 test2;<br>&#125;<br><br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-meta\">@Accessors(chain = true)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestTest2</span> </span>&#123;<br>    String ddd;<br>    String ccc;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>Controler</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@RequestMapping(&quot;/api/v1&quot;)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestController</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> Logger log = LoggerFactory.getLogger(TestController.class);<br><br>    <span class=\"hljs-meta\">@PostMapping(&quot;/hello&quot;)</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">helloWorld</span><span class=\"hljs-params\">(String type,</span></span><br><span class=\"hljs-function\"><span class=\"hljs-params\">                             <span class=\"hljs-meta\">@RequestBody</span> Object test)</span> <span class=\"hljs-keyword\">throws</span> IOException </span>&#123;<br>        <br>        log.info(<span class=\"hljs-string\">&quot;test &#123;&#125;&quot;</span>, test.toString());<br>        <span class=\"hljs-keyword\">if</span> (type.equals(<span class=\"hljs-string\">&quot;0&quot;</span>)) &#123;<br>            TestTest testTest = <span class=\"hljs-keyword\">new</span> TestTest();<br>            ObjectMapper objectMapper = <span class=\"hljs-keyword\">new</span> ObjectMapper();<br>            String testString = objectMapper.writeValueAsString(test);<br>            testTest = objectMapper.readValue(testString, TestTest.class);<br>            <span class=\"hljs-keyword\">return</span> testTest.toString();<br>        &#125;<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (type.equals(<span class=\"hljs-string\">&quot;1&quot;</span>))&#123;<br>            TestTest2 testTest2 = <span class=\"hljs-keyword\">new</span> TestTest2();<br>            ObjectMapper objectMapper = <span class=\"hljs-keyword\">new</span> ObjectMapper();<br>            String testString = objectMapper.writeValueAsString(test);<br>            testTest2 = objectMapper.readValue(testString, TestTest2.class);<br>            <span class=\"hljs-keyword\">return</span> testTest2toString();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;error&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>遇到此类问题，但看了文章还是未解决<br>评论或加 QQ：781378815</p>\n</blockquote>\n"},{"title":"🎭面具的使用技巧","date":"2025-01-04T19:51:15.000Z","_content":"\n\n\n# 面具示例汇总\n\n方便第二次阅读使用，第一次阅读可以先看下面具制作过程。\n\n|   |   |   |   |\n|---|---|---|---|\n|输出|输出|实现路径指南|面具示例|\n|HLD需求分析|LLD第一章||[HLD需求分析 -> LLD第一章](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#CRn1d7c4soCOiOxBr1McUYmQnRf)|\n|API接口描述|TP用例||[API描述 -> TP用例](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BgLodw2xGohtVlxLpIkckGgSnKd)|\n|伪代码|代码|[ChatGPT辅助软件开发提效操作指南](https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#H3dudf9COoWGXwxkL1lcYZfSnLe)|[伪代码 -> 代码](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#ERDTdPr6moSXAkxW0IFcozRqnfd)|\n|TP|Python脚本|[ChatGPT辅助软件开发提效操作指南](https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#U3I0d3WDpoClpRx95uuc8oFTnzt)|[TP用例 -> Python自动化](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#K45Wd4b9ooDHhGxyykgcuKf5nVd)|\n|TP|RF脚本|[ChatGPT辅助软件开发提效操作指南](https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#NagRdjvYfoutBkxePmkc83V5ngh)|[TP用例 -> RF自动化](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BG5ydfsZjoAaRUxAI61c1qRcnr4)|\n\n  \n\n# Zero-Shot与Few-Shot\n\n## Zero-Shot\n\nZero-Shot Prompting 是一种自然语言处理技术，可以让计算机模型根据提示或指令进行任务处理。ChatGPT 就用到这个技术。\n\n举个例子，我们可以给 ChatGPT 一个简短的 prompt，比如给出某部电影的名称，它就可以生成一个关于该情节的摘要，而不需要进行电影相关的专门训练。 -- 引用自 **[Zero-Shot](https://learningprompt.wiki/docs/tutorial-extras/Zero-Shot%20Prompts)**\n\nZero-Shot 的优点是方便快捷、发散思维，我不需要给他任何提示，直接就开聊。这也同时是他的缺点，每次相同的提问，极有可能会给你不同的答案。我们可以利用Zero-Shot来进行思维的扩展，例如**技术交流****、****LLD****的设计考虑、代码分析、BUG解决**等。\n\n  \n\n## Few-Shot\n\n可以把 Few-Shot 简单理解为，让模型回答问题之前先给它几个**一问一答**的例子（有助于 AI 进行**链式****思维**以提升结果的准确率）。之后你再问相关的问题它就会根据你提供的例子进行规范作答。这就像是一个超级 mini 的 Fine-tuning，由于 GPT 3.5 模型过于强大，我们只需用几个小例子即可得到很好的效果。\n\n通过 Few-shot 制作面具，引导模型返回更符合我们预期的答案，使ChatGPT成为一个生产力工具，例如**TP生成、****LLD****格式生成、代码生成、****自动化脚本**生成等工具。\n\n> 深入了解 Few-Shot请参考：[参考连接1](https://learningprompt.wiki/docs/tutorial-extras/Few-Shot%20Prompting)，[参考连接2](https://github.com/openai/openai-cookbook/blob/main/techniques_to_improve_reliability.md#few-shot-examples)\n\n  \n\n# 使用Few-Shot制作面具\n\n区别于我们原来的面具制作，原来的面具（或者提示词）制作全是以用户角度的输入，很难达到训练AI的效果，他只会根据我们的输入内容进行发散回答，导致回答内容很难符合我们的预期。我们以TP生成自动化脚本为例描述面具的制作。\n\n\n## 新建一个面具并设置前置上下文\n    \n\n点击：面具-查看全部-新建\n\n![](1182f70ca6531857175a276bf1b4f2bb_MD5.png)\n\n## 设置合适的角色和prompt\n    \n\n前置对话角色描述：\n\n|   |   |\n|---|---|\n|system|system 角色定义了 assistant 的主要行为|\n|user|用户所代表的角色|\n|assistant|GPT所代表的角色|\n\n以TP生成脚本示例设置提示词：\n\n![](18a97818680096f1f60c954cb6f386dd_MD5.png)\n\n这里我使用了 1 shot（一个 user + assistant 的问答即 1 shot）来创建这个面具，其中 system 角色定义了 assistant 的主要行为，也就是让模型大概知道它自己是干啥的。后面的 user + assistant prompt 让模型参考应该以何种方式回答问题。指定面具时可以根据需要多设定几个shot。\n\n具体内容如下：\n\n|   |   |\n|---|---|\n|system|你现在是Python专家，我需要你根据我的测试用例编写测试脚本，我会给你提供测试用例，你需要严格按照我的TP用例生成代码。|\n|user|TP用例用例如下：<br><br>用例名称：<br><br>云防火墙规则创建、查询、删除（硬墙）<br><br>用例步骤：<br><br>1、构造基础环境<br><br>2、在net_s1下创建port，device_owner为DEVICE_OWNER_VM<br><br>【省略】<br><br>用例期望：<br><br>1、构建成功<br><br>2、大带宽防火墙上有配置：router1配置<br><br>【省略】|\n|assistant|我根据你提供TP，生成自动化脚本，以下是测试用例的脚本代码：<br><br>def run_case(): 【省略】|\n\n## 附带历史消息数设置为 0\n    \n\n在使用该工具之前，需要先将设置里的附带历史消息数设置为 0，否则消息历史会对之前做的 Few-shot 产生影响。（因为AI是**链式****思维**）\n\n![](910ba56bc046516ca2eca596131ff90e_MD5.png)\n\n## 使用面具\n    \n\n开始对话\n\n![](785aec667de7b8ddc47745f30372f7b0_MD5.png)\n\n输入新的TP脚本\n\n![](d8c30fb32cfaf40eed9a2591525beedc_MD5.png)\n\nGPT输出：\n\n经循环测试，每次输出结果都基本一致，脚本可用度比较高。\n\n![](b7deb45977cb823eec3fc164f62a5866_MD5.png)\n\n## 两次面具的对比\n    \n\n原来的前置对话是这个样子的：\n\n![](2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png)\n\n现在的前置对话是这样子的：\n\n![](1a70270c8c5728677ee3763b55c99bc1_MD5.png)","source":"_posts/面具的使用技巧.md","raw":"---\ntitle: 🎭面具的使用技巧\ntags:\n  - ChatGPT\n  - AI\ndate: 2025-01-05 03:51:15\ncategories:\n  - AIGC\n---\n\n\n\n# 面具示例汇总\n\n方便第二次阅读使用，第一次阅读可以先看下面具制作过程。\n\n|   |   |   |   |\n|---|---|---|---|\n|输出|输出|实现路径指南|面具示例|\n|HLD需求分析|LLD第一章||[HLD需求分析 -> LLD第一章](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#CRn1d7c4soCOiOxBr1McUYmQnRf)|\n|API接口描述|TP用例||[API描述 -> TP用例](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BgLodw2xGohtVlxLpIkckGgSnKd)|\n|伪代码|代码|[ChatGPT辅助软件开发提效操作指南](https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#H3dudf9COoWGXwxkL1lcYZfSnLe)|[伪代码 -> 代码](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#ERDTdPr6moSXAkxW0IFcozRqnfd)|\n|TP|Python脚本|[ChatGPT辅助软件开发提效操作指南](https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#U3I0d3WDpoClpRx95uuc8oFTnzt)|[TP用例 -> Python自动化](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#K45Wd4b9ooDHhGxyykgcuKf5nVd)|\n|TP|RF脚本|[ChatGPT辅助软件开发提效操作指南](https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#NagRdjvYfoutBkxePmkc83V5ngh)|[TP用例 -> RF自动化](https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BG5ydfsZjoAaRUxAI61c1qRcnr4)|\n\n  \n\n# Zero-Shot与Few-Shot\n\n## Zero-Shot\n\nZero-Shot Prompting 是一种自然语言处理技术，可以让计算机模型根据提示或指令进行任务处理。ChatGPT 就用到这个技术。\n\n举个例子，我们可以给 ChatGPT 一个简短的 prompt，比如给出某部电影的名称，它就可以生成一个关于该情节的摘要，而不需要进行电影相关的专门训练。 -- 引用自 **[Zero-Shot](https://learningprompt.wiki/docs/tutorial-extras/Zero-Shot%20Prompts)**\n\nZero-Shot 的优点是方便快捷、发散思维，我不需要给他任何提示，直接就开聊。这也同时是他的缺点，每次相同的提问，极有可能会给你不同的答案。我们可以利用Zero-Shot来进行思维的扩展，例如**技术交流****、****LLD****的设计考虑、代码分析、BUG解决**等。\n\n  \n\n## Few-Shot\n\n可以把 Few-Shot 简单理解为，让模型回答问题之前先给它几个**一问一答**的例子（有助于 AI 进行**链式****思维**以提升结果的准确率）。之后你再问相关的问题它就会根据你提供的例子进行规范作答。这就像是一个超级 mini 的 Fine-tuning，由于 GPT 3.5 模型过于强大，我们只需用几个小例子即可得到很好的效果。\n\n通过 Few-shot 制作面具，引导模型返回更符合我们预期的答案，使ChatGPT成为一个生产力工具，例如**TP生成、****LLD****格式生成、代码生成、****自动化脚本**生成等工具。\n\n> 深入了解 Few-Shot请参考：[参考连接1](https://learningprompt.wiki/docs/tutorial-extras/Few-Shot%20Prompting)，[参考连接2](https://github.com/openai/openai-cookbook/blob/main/techniques_to_improve_reliability.md#few-shot-examples)\n\n  \n\n# 使用Few-Shot制作面具\n\n区别于我们原来的面具制作，原来的面具（或者提示词）制作全是以用户角度的输入，很难达到训练AI的效果，他只会根据我们的输入内容进行发散回答，导致回答内容很难符合我们的预期。我们以TP生成自动化脚本为例描述面具的制作。\n\n\n## 新建一个面具并设置前置上下文\n    \n\n点击：面具-查看全部-新建\n\n![](1182f70ca6531857175a276bf1b4f2bb_MD5.png)\n\n## 设置合适的角色和prompt\n    \n\n前置对话角色描述：\n\n|   |   |\n|---|---|\n|system|system 角色定义了 assistant 的主要行为|\n|user|用户所代表的角色|\n|assistant|GPT所代表的角色|\n\n以TP生成脚本示例设置提示词：\n\n![](18a97818680096f1f60c954cb6f386dd_MD5.png)\n\n这里我使用了 1 shot（一个 user + assistant 的问答即 1 shot）来创建这个面具，其中 system 角色定义了 assistant 的主要行为，也就是让模型大概知道它自己是干啥的。后面的 user + assistant prompt 让模型参考应该以何种方式回答问题。指定面具时可以根据需要多设定几个shot。\n\n具体内容如下：\n\n|   |   |\n|---|---|\n|system|你现在是Python专家，我需要你根据我的测试用例编写测试脚本，我会给你提供测试用例，你需要严格按照我的TP用例生成代码。|\n|user|TP用例用例如下：<br><br>用例名称：<br><br>云防火墙规则创建、查询、删除（硬墙）<br><br>用例步骤：<br><br>1、构造基础环境<br><br>2、在net_s1下创建port，device_owner为DEVICE_OWNER_VM<br><br>【省略】<br><br>用例期望：<br><br>1、构建成功<br><br>2、大带宽防火墙上有配置：router1配置<br><br>【省略】|\n|assistant|我根据你提供TP，生成自动化脚本，以下是测试用例的脚本代码：<br><br>def run_case(): 【省略】|\n\n## 附带历史消息数设置为 0\n    \n\n在使用该工具之前，需要先将设置里的附带历史消息数设置为 0，否则消息历史会对之前做的 Few-shot 产生影响。（因为AI是**链式****思维**）\n\n![](910ba56bc046516ca2eca596131ff90e_MD5.png)\n\n## 使用面具\n    \n\n开始对话\n\n![](785aec667de7b8ddc47745f30372f7b0_MD5.png)\n\n输入新的TP脚本\n\n![](d8c30fb32cfaf40eed9a2591525beedc_MD5.png)\n\nGPT输出：\n\n经循环测试，每次输出结果都基本一致，脚本可用度比较高。\n\n![](b7deb45977cb823eec3fc164f62a5866_MD5.png)\n\n## 两次面具的对比\n    \n\n原来的前置对话是这个样子的：\n\n![](2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png)\n\n现在的前置对话是这样子的：\n\n![](1a70270c8c5728677ee3763b55c99bc1_MD5.png)","slug":"面具的使用技巧","published":1,"updated":"2025-01-04T21:50:53.001Z","_id":"cm5ippq2d00001k8t6qwadj9k","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"面具示例汇总\"><a href=\"#面具示例汇总\" class=\"headerlink\" title=\"面具示例汇总\"></a>面具示例汇总</h1><p>方便第二次阅读使用，第一次阅读可以先看下面具制作过程。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>输出</td>\n<td>输出</td>\n<td>实现路径指南</td>\n<td>面具示例</td>\n</tr>\n<tr>\n<td>HLD需求分析</td>\n<td>LLD第一章</td>\n<td></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#CRn1d7c4soCOiOxBr1McUYmQnRf\">HLD需求分析 -&gt; LLD第一章</a></td>\n</tr>\n<tr>\n<td>API接口描述</td>\n<td>TP用例</td>\n<td></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BgLodw2xGohtVlxLpIkckGgSnKd\">API描述 -&gt; TP用例</a></td>\n</tr>\n<tr>\n<td>伪代码</td>\n<td>代码</td>\n<td><a href=\"https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#H3dudf9COoWGXwxkL1lcYZfSnLe\">ChatGPT辅助软件开发提效操作指南</a></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#ERDTdPr6moSXAkxW0IFcozRqnfd\">伪代码 -&gt; 代码</a></td>\n</tr>\n<tr>\n<td>TP</td>\n<td>Python脚本</td>\n<td><a href=\"https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#U3I0d3WDpoClpRx95uuc8oFTnzt\">ChatGPT辅助软件开发提效操作指南</a></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#K45Wd4b9ooDHhGxyykgcuKf5nVd\">TP用例 -&gt; Python自动化</a></td>\n</tr>\n<tr>\n<td>TP</td>\n<td>RF脚本</td>\n<td><a href=\"https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#NagRdjvYfoutBkxePmkc83V5ngh\">ChatGPT辅助软件开发提效操作指南</a></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BG5ydfsZjoAaRUxAI61c1qRcnr4\">TP用例 -&gt; RF自动化</a></td>\n</tr>\n</tbody></table>\n<h1 id=\"Zero-Shot与Few-Shot\"><a href=\"#Zero-Shot与Few-Shot\" class=\"headerlink\" title=\"Zero-Shot与Few-Shot\"></a>Zero-Shot与Few-Shot</h1><h2 id=\"Zero-Shot\"><a href=\"#Zero-Shot\" class=\"headerlink\" title=\"Zero-Shot\"></a>Zero-Shot</h2><p>Zero-Shot Prompting 是一种自然语言处理技术，可以让计算机模型根据提示或指令进行任务处理。ChatGPT 就用到这个技术。</p>\n<p>举个例子，我们可以给 ChatGPT 一个简短的 prompt，比如给出某部电影的名称，它就可以生成一个关于该情节的摘要，而不需要进行电影相关的专门训练。 – 引用自 <strong><a href=\"https://learningprompt.wiki/docs/tutorial-extras/Zero-Shot%20Prompts\">Zero-Shot</a></strong></p>\n<p>Zero-Shot 的优点是方便快捷、发散思维，我不需要给他任何提示，直接就开聊。这也同时是他的缺点，每次相同的提问，极有可能会给你不同的答案。我们可以利用Zero-Shot来进行思维的扩展，例如<strong>技术交流<strong><strong>、</strong></strong>LLD****的设计考虑、代码分析、BUG解决</strong>等。</p>\n<h2 id=\"Few-Shot\"><a href=\"#Few-Shot\" class=\"headerlink\" title=\"Few-Shot\"></a>Few-Shot</h2><p>可以把 Few-Shot 简单理解为，让模型回答问题之前先给它几个<strong>一问一答</strong>的例子（有助于 AI 进行<strong>链式****思维</strong>以提升结果的准确率）。之后你再问相关的问题它就会根据你提供的例子进行规范作答。这就像是一个超级 mini 的 Fine-tuning，由于 GPT 3.5 模型过于强大，我们只需用几个小例子即可得到很好的效果。</p>\n<p>通过 Few-shot 制作面具，引导模型返回更符合我们预期的答案，使ChatGPT成为一个生产力工具，例如<strong>TP生成、<strong><strong>LLD</strong></strong>格式生成、代码生成、****自动化脚本</strong>生成等工具。</p>\n<blockquote>\n<p>深入了解 Few-Shot请参考：<a href=\"https://learningprompt.wiki/docs/tutorial-extras/Few-Shot%20Prompting\">参考连接1</a>，<a href=\"https://github.com/openai/openai-cookbook/blob/main/techniques_to_improve_reliability.md#few-shot-examples\">参考连接2</a></p>\n</blockquote>\n<h1 id=\"使用Few-Shot制作面具\"><a href=\"#使用Few-Shot制作面具\" class=\"headerlink\" title=\"使用Few-Shot制作面具\"></a>使用Few-Shot制作面具</h1><p>区别于我们原来的面具制作，原来的面具（或者提示词）制作全是以用户角度的输入，很难达到训练AI的效果，他只会根据我们的输入内容进行发散回答，导致回答内容很难符合我们的预期。我们以TP生成自动化脚本为例描述面具的制作。</p>\n<h2 id=\"新建一个面具并设置前置上下文\"><a href=\"#新建一个面具并设置前置上下文\" class=\"headerlink\" title=\"新建一个面具并设置前置上下文\"></a>新建一个面具并设置前置上下文</h2><p>点击：面具-查看全部-新建</p>\n<p><img src=\"1182f70ca6531857175a276bf1b4f2bb_MD5.png\"></p>\n<h2 id=\"设置合适的角色和prompt\"><a href=\"#设置合适的角色和prompt\" class=\"headerlink\" title=\"设置合适的角色和prompt\"></a>设置合适的角色和prompt</h2><p>前置对话角色描述：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>system</td>\n<td>system 角色定义了 assistant 的主要行为</td>\n</tr>\n<tr>\n<td>user</td>\n<td>用户所代表的角色</td>\n</tr>\n<tr>\n<td>assistant</td>\n<td>GPT所代表的角色</td>\n</tr>\n</tbody></table>\n<p>以TP生成脚本示例设置提示词：</p>\n<p><img src=\"18a97818680096f1f60c954cb6f386dd_MD5.png\"></p>\n<p>这里我使用了 1 shot（一个 user + assistant 的问答即 1 shot）来创建这个面具，其中 system 角色定义了 assistant 的主要行为，也就是让模型大概知道它自己是干啥的。后面的 user + assistant prompt 让模型参考应该以何种方式回答问题。指定面具时可以根据需要多设定几个shot。</p>\n<p>具体内容如下：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>system</td>\n<td>你现在是Python专家，我需要你根据我的测试用例编写测试脚本，我会给你提供测试用例，你需要严格按照我的TP用例生成代码。</td>\n</tr>\n<tr>\n<td>user</td>\n<td>TP用例用例如下：<br><br>用例名称：<br><br>云防火墙规则创建、查询、删除（硬墙）<br><br>用例步骤：<br><br>1、构造基础环境<br><br>2、在net_s1下创建port，device_owner为DEVICE_OWNER_VM<br><br>【省略】<br><br>用例期望：<br><br>1、构建成功<br><br>2、大带宽防火墙上有配置：router1配置<br><br>【省略】</td>\n</tr>\n<tr>\n<td>assistant</td>\n<td>我根据你提供TP，生成自动化脚本，以下是测试用例的脚本代码：<br><br>def run_case(): 【省略】</td>\n</tr>\n</tbody></table>\n<h2 id=\"附带历史消息数设置为-0\"><a href=\"#附带历史消息数设置为-0\" class=\"headerlink\" title=\"附带历史消息数设置为 0\"></a>附带历史消息数设置为 0</h2><p>在使用该工具之前，需要先将设置里的附带历史消息数设置为 0，否则消息历史会对之前做的 Few-shot 产生影响。（因为AI是<strong>链式****思维</strong>）</p>\n<p><img src=\"910ba56bc046516ca2eca596131ff90e_MD5.png\"></p>\n<h2 id=\"使用面具\"><a href=\"#使用面具\" class=\"headerlink\" title=\"使用面具\"></a>使用面具</h2><p>开始对话</p>\n<p><img src=\"785aec667de7b8ddc47745f30372f7b0_MD5.png\"></p>\n<p>输入新的TP脚本</p>\n<p><img src=\"d8c30fb32cfaf40eed9a2591525beedc_MD5.png\"></p>\n<p>GPT输出：</p>\n<p>经循环测试，每次输出结果都基本一致，脚本可用度比较高。</p>\n<p><img src=\"b7deb45977cb823eec3fc164f62a5866_MD5.png\"></p>\n<h2 id=\"两次面具的对比\"><a href=\"#两次面具的对比\" class=\"headerlink\" title=\"两次面具的对比\"></a>两次面具的对比</h2><p>原来的前置对话是这个样子的：</p>\n<p><img src=\"2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png\"></p>\n<p>现在的前置对话是这样子的：</p>\n<p><img src=\"1a70270c8c5728677ee3763b55c99bc1_MD5.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"面具示例汇总\"><a href=\"#面具示例汇总\" class=\"headerlink\" title=\"面具示例汇总\"></a>面具示例汇总</h1><p>方便第二次阅读使用，第一次阅读可以先看下面具制作过程。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>输出</td>\n<td>输出</td>\n<td>实现路径指南</td>\n<td>面具示例</td>\n</tr>\n<tr>\n<td>HLD需求分析</td>\n<td>LLD第一章</td>\n<td></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#CRn1d7c4soCOiOxBr1McUYmQnRf\">HLD需求分析 -&gt; LLD第一章</a></td>\n</tr>\n<tr>\n<td>API接口描述</td>\n<td>TP用例</td>\n<td></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BgLodw2xGohtVlxLpIkckGgSnKd\">API描述 -&gt; TP用例</a></td>\n</tr>\n<tr>\n<td>伪代码</td>\n<td>代码</td>\n<td><a href=\"https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#H3dudf9COoWGXwxkL1lcYZfSnLe\">ChatGPT辅助软件开发提效操作指南</a></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#ERDTdPr6moSXAkxW0IFcozRqnfd\">伪代码 -&gt; 代码</a></td>\n</tr>\n<tr>\n<td>TP</td>\n<td>Python脚本</td>\n<td><a href=\"https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#U3I0d3WDpoClpRx95uuc8oFTnzt\">ChatGPT辅助软件开发提效操作指南</a></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#K45Wd4b9ooDHhGxyykgcuKf5nVd\">TP用例 -&gt; Python自动化</a></td>\n</tr>\n<tr>\n<td>TP</td>\n<td>RF脚本</td>\n<td><a href=\"https://ruijie.feishu.cn/docx/RdAFdCkgUoVxoyxZBx6ceGRfnlV#NagRdjvYfoutBkxePmkc83V5ngh\">ChatGPT辅助软件开发提效操作指南</a></td>\n<td><a href=\"https://ruijie.feishu.cn/wiki/U8iqwPvDdiIisskVR7ccvAFwn0d#BG5ydfsZjoAaRUxAI61c1qRcnr4\">TP用例 -&gt; RF自动化</a></td>\n</tr>\n</tbody></table>\n<h1 id=\"Zero-Shot与Few-Shot\"><a href=\"#Zero-Shot与Few-Shot\" class=\"headerlink\" title=\"Zero-Shot与Few-Shot\"></a>Zero-Shot与Few-Shot</h1><h2 id=\"Zero-Shot\"><a href=\"#Zero-Shot\" class=\"headerlink\" title=\"Zero-Shot\"></a>Zero-Shot</h2><p>Zero-Shot Prompting 是一种自然语言处理技术，可以让计算机模型根据提示或指令进行任务处理。ChatGPT 就用到这个技术。</p>\n<p>举个例子，我们可以给 ChatGPT 一个简短的 prompt，比如给出某部电影的名称，它就可以生成一个关于该情节的摘要，而不需要进行电影相关的专门训练。 – 引用自 <strong><a href=\"https://learningprompt.wiki/docs/tutorial-extras/Zero-Shot%20Prompts\">Zero-Shot</a></strong></p>\n<p>Zero-Shot 的优点是方便快捷、发散思维，我不需要给他任何提示，直接就开聊。这也同时是他的缺点，每次相同的提问，极有可能会给你不同的答案。我们可以利用Zero-Shot来进行思维的扩展，例如<strong>技术交流<strong><strong>、</strong></strong>LLD****的设计考虑、代码分析、BUG解决</strong>等。</p>\n<h2 id=\"Few-Shot\"><a href=\"#Few-Shot\" class=\"headerlink\" title=\"Few-Shot\"></a>Few-Shot</h2><p>可以把 Few-Shot 简单理解为，让模型回答问题之前先给它几个<strong>一问一答</strong>的例子（有助于 AI 进行<strong>链式****思维</strong>以提升结果的准确率）。之后你再问相关的问题它就会根据你提供的例子进行规范作答。这就像是一个超级 mini 的 Fine-tuning，由于 GPT 3.5 模型过于强大，我们只需用几个小例子即可得到很好的效果。</p>\n<p>通过 Few-shot 制作面具，引导模型返回更符合我们预期的答案，使ChatGPT成为一个生产力工具，例如<strong>TP生成、<strong><strong>LLD</strong></strong>格式生成、代码生成、****自动化脚本</strong>生成等工具。</p>\n<blockquote>\n<p>深入了解 Few-Shot请参考：<a href=\"https://learningprompt.wiki/docs/tutorial-extras/Few-Shot%20Prompting\">参考连接1</a>，<a href=\"https://github.com/openai/openai-cookbook/blob/main/techniques_to_improve_reliability.md#few-shot-examples\">参考连接2</a></p>\n</blockquote>\n<h1 id=\"使用Few-Shot制作面具\"><a href=\"#使用Few-Shot制作面具\" class=\"headerlink\" title=\"使用Few-Shot制作面具\"></a>使用Few-Shot制作面具</h1><p>区别于我们原来的面具制作，原来的面具（或者提示词）制作全是以用户角度的输入，很难达到训练AI的效果，他只会根据我们的输入内容进行发散回答，导致回答内容很难符合我们的预期。我们以TP生成自动化脚本为例描述面具的制作。</p>\n<h2 id=\"新建一个面具并设置前置上下文\"><a href=\"#新建一个面具并设置前置上下文\" class=\"headerlink\" title=\"新建一个面具并设置前置上下文\"></a>新建一个面具并设置前置上下文</h2><p>点击：面具-查看全部-新建</p>\n<p><img src=\"1182f70ca6531857175a276bf1b4f2bb_MD5.png\"></p>\n<h2 id=\"设置合适的角色和prompt\"><a href=\"#设置合适的角色和prompt\" class=\"headerlink\" title=\"设置合适的角色和prompt\"></a>设置合适的角色和prompt</h2><p>前置对话角色描述：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>system</td>\n<td>system 角色定义了 assistant 的主要行为</td>\n</tr>\n<tr>\n<td>user</td>\n<td>用户所代表的角色</td>\n</tr>\n<tr>\n<td>assistant</td>\n<td>GPT所代表的角色</td>\n</tr>\n</tbody></table>\n<p>以TP生成脚本示例设置提示词：</p>\n<p><img src=\"18a97818680096f1f60c954cb6f386dd_MD5.png\"></p>\n<p>这里我使用了 1 shot（一个 user + assistant 的问答即 1 shot）来创建这个面具，其中 system 角色定义了 assistant 的主要行为，也就是让模型大概知道它自己是干啥的。后面的 user + assistant prompt 让模型参考应该以何种方式回答问题。指定面具时可以根据需要多设定几个shot。</p>\n<p>具体内容如下：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>system</td>\n<td>你现在是Python专家，我需要你根据我的测试用例编写测试脚本，我会给你提供测试用例，你需要严格按照我的TP用例生成代码。</td>\n</tr>\n<tr>\n<td>user</td>\n<td>TP用例用例如下：<br><br>用例名称：<br><br>云防火墙规则创建、查询、删除（硬墙）<br><br>用例步骤：<br><br>1、构造基础环境<br><br>2、在net_s1下创建port，device_owner为DEVICE_OWNER_VM<br><br>【省略】<br><br>用例期望：<br><br>1、构建成功<br><br>2、大带宽防火墙上有配置：router1配置<br><br>【省略】</td>\n</tr>\n<tr>\n<td>assistant</td>\n<td>我根据你提供TP，生成自动化脚本，以下是测试用例的脚本代码：<br><br>def run_case(): 【省略】</td>\n</tr>\n</tbody></table>\n<h2 id=\"附带历史消息数设置为-0\"><a href=\"#附带历史消息数设置为-0\" class=\"headerlink\" title=\"附带历史消息数设置为 0\"></a>附带历史消息数设置为 0</h2><p>在使用该工具之前，需要先将设置里的附带历史消息数设置为 0，否则消息历史会对之前做的 Few-shot 产生影响。（因为AI是<strong>链式****思维</strong>）</p>\n<p><img src=\"910ba56bc046516ca2eca596131ff90e_MD5.png\"></p>\n<h2 id=\"使用面具\"><a href=\"#使用面具\" class=\"headerlink\" title=\"使用面具\"></a>使用面具</h2><p>开始对话</p>\n<p><img src=\"785aec667de7b8ddc47745f30372f7b0_MD5.png\"></p>\n<p>输入新的TP脚本</p>\n<p><img src=\"d8c30fb32cfaf40eed9a2591525beedc_MD5.png\"></p>\n<p>GPT输出：</p>\n<p>经循环测试，每次输出结果都基本一致，脚本可用度比较高。</p>\n<p><img src=\"b7deb45977cb823eec3fc164f62a5866_MD5.png\"></p>\n<h2 id=\"两次面具的对比\"><a href=\"#两次面具的对比\" class=\"headerlink\" title=\"两次面具的对比\"></a>两次面具的对比</h2><p>原来的前置对话是这个样子的：</p>\n<p><img src=\"2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png\"></p>\n<p>现在的前置对话是这样子的：</p>\n<p><img src=\"1a70270c8c5728677ee3763b55c99bc1_MD5.png\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/美团笔试-空间回廊/36-1.jpg","slug":"36-1.jpg","post":"cksgapz7k000a60bw2ylu5cbx","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/1182f70ca6531857175a276bf1b4f2bb_MD5.png","slug":"1182f70ca6531857175a276bf1b4f2bb_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/1a70270c8c5728677ee3763b55c99bc1_MD5.png","slug":"1a70270c8c5728677ee3763b55c99bc1_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/18a97818680096f1f60c954cb6f386dd_MD5.png","slug":"18a97818680096f1f60c954cb6f386dd_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png","slug":"2c570ef6ed5d5c7cad6e9ba5327a3e56_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/910ba56bc046516ca2eca596131ff90e_MD5.png","slug":"910ba56bc046516ca2eca596131ff90e_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/785aec667de7b8ddc47745f30372f7b0_MD5.png","slug":"785aec667de7b8ddc47745f30372f7b0_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/b7deb45977cb823eec3fc164f62a5866_MD5.png","slug":"b7deb45977cb823eec3fc164f62a5866_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0},{"_id":"source/_posts/面具的使用技巧/d8c30fb32cfaf40eed9a2591525beedc_MD5.png","slug":"d8c30fb32cfaf40eed9a2591525beedc_MD5.png","post":"cm5ippq2d00001k8t6qwadj9k","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cksgapz79000260bw95fga1jt","category_id":"cksgapz7f000560bwhvx9hyt0","_id":"cksgapz80000r60bw6kl226cv"},{"post_id":"cksgapz79000260bw95fga1jt","category_id":"cksgapz7x000k60bw2ugc7oyc","_id":"cksgapz80000t60bw3sm86tp1"},{"post_id":"cksgapz7k000a60bw2ylu5cbx","category_id":"cksgapz7f000560bwhvx9hyt0","_id":"cksgapz81000w60bw9iyj5j3q"},{"post_id":"cksgapz7k000a60bw2ylu5cbx","category_id":"cksgapz7x000k60bw2ugc7oyc","_id":"cksgapz82000y60bwew0sdnkt"},{"post_id":"cksgapz7d000460bwar6ih7xk","category_id":"cksgapz7f000560bwhvx9hyt0","_id":"cksgapz83001460bw2pfy620w"},{"post_id":"cksgapz7d000460bwar6ih7xk","category_id":"cksgapz7x000k60bw2ugc7oyc","_id":"cksgapz84001660bw6hsn24sg"},{"post_id":"cksgapz7f000660bw63zqck27","category_id":"cksgapz7r000e60bw8yvr9cs5","_id":"cksgapz85001860bwhqy5bmvj"},{"post_id":"cksgapz7f000660bw63zqck27","category_id":"cksgapz82001060bw6wvpeb34","_id":"cksgapz85001a60bwdjtw09bc"},{"post_id":"cksgapz7h000760bw2bjz4kht","category_id":"cksgapz7r000e60bw8yvr9cs5","_id":"cksgapz85001c60bw6u5jho5c"},{"post_id":"cksgapz7h000760bw2bjz4kht","category_id":"cksgapz82001060bw6wvpeb34","_id":"cksgapz85001d60bw0kdnc446"},{"post_id":"cksgapz7p000c60bwe9919i90","category_id":"cksgapz7r000e60bw8yvr9cs5","_id":"cksgapz86001e60bw8e0hcymj"},{"post_id":"cksgapz7p000c60bwe9919i90","category_id":"cksgapz84001760bwhyay54zq","_id":"cksgapz86001f60bw7tl8h2we"},{"post_id":"cm5ippq2d00001k8t6qwadj9k","category_id":"cm5ipvt01000c4g8t4w3ughf9","_id":"cm5ipvt02000e4g8thl8k4fjn"}],"PostTag":[{"post_id":"cksgapz75000160bwesj3gkfz","tag_id":"cksgapz7c000360bwf8w4hpyz","_id":"cksgapz7k000960bw3igu6tht"},{"post_id":"cksgapz79000260bw95fga1jt","tag_id":"cksgapz7i000860bwbg75fnmw","_id":"cksgapz7v000h60bw0h3f5v18"},{"post_id":"cksgapz79000260bw95fga1jt","tag_id":"cksgapz7q000d60bw7p8h9hak","_id":"cksgapz7w000i60bw7r3m4fpx"},{"post_id":"cksgapz7d000460bwar6ih7xk","tag_id":"cksgapz7i000860bwbg75fnmw","_id":"cksgapz7y000m60bw6d1xhylt"},{"post_id":"cksgapz7d000460bwar6ih7xk","tag_id":"cksgapz7q000d60bw7p8h9hak","_id":"cksgapz7z000o60bwgr1xhji0"},{"post_id":"cksgapz7f000660bw63zqck27","tag_id":"cksgapz7y000l60bw3nvw5sky","_id":"cksgapz80000s60bwayqi2kub"},{"post_id":"cksgapz7h000760bw2bjz4kht","tag_id":"cksgapz7y000l60bw3nvw5sky","_id":"cksgapz81000x60bw50av4ujj"},{"post_id":"cksgapz7k000a60bw2ylu5cbx","tag_id":"cksgapz7i000860bwbg75fnmw","_id":"cksgapz83001160bw75v19xkb"},{"post_id":"cksgapz7k000a60bw2ylu5cbx","tag_id":"cksgapz7q000d60bw7p8h9hak","_id":"cksgapz83001260bwc1rcf636"},{"post_id":"cksgapz7p000c60bwe9919i90","tag_id":"cksgapz7y000l60bw3nvw5sky","_id":"cksgapz85001960bw3u3p3ck4"},{"post_id":"cksgapz7p000c60bwe9919i90","tag_id":"cksgapz83001360bw1e664dtn","_id":"cksgapz85001b60bwdp4ye5kr"},{"post_id":"cm5ippq2d00001k8t6qwadj9k","tag_id":"cm5ipvi4v00084g8tfvrg35h8","_id":"cm5ipvi4v00094g8t6q1tga71"},{"post_id":"cm5ippq2d00001k8t6qwadj9k","tag_id":"cm5ipvm5n000a4g8teul96dpx","_id":"cm5ipvm5n000b4g8t8mjdfr09"}],"Tag":[{"name":"test","_id":"cksgapz7c000360bwf8w4hpyz"},{"name":"c++","_id":"cksgapz7i000860bwbg75fnmw"},{"name":"算法","_id":"cksgapz7q000d60bw7p8h9hak"},{"name":"java","_id":"cksgapz7y000l60bw3nvw5sky"},{"name":"spring","_id":"cksgapz83001360bw1e664dtn"},{"name":"Chat","_id":"cm5ipv39v00004g8t71v28z59"},{"name":"cha't'G","_id":"cm5ipv5a000024g8t2vm2frzm"},{"name":"chatGpt","_id":"cm5ipv7ge00044g8tcatgc1tb"},{"name":"chatGPT","_id":"cm5ipva3300064g8t6is2hjux"},{"name":"ChatGPT","_id":"cm5ipvi4v00084g8tfvrg35h8"},{"name":"AI","_id":"cm5ipvm5n000a4g8teul96dpx"}]}}